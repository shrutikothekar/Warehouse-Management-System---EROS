@model IEnumerable<eros.Models.so_inward>
@{
    Layout = null;
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
    var sortedModel = Model.OrderByDescending(item => item.sodate);

}

@if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN" || role == "HOSITE")
    {
        <div id="spinner" style="display: none;">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <p class="mt-2">Generating PDF...</p>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                    <thead class="thead-light">
                        <tr>
                            <th>
                                Order Ref.No
                            </th>
                            <th>Order Dt.</th>
                            <th>@Html.DisplayNameFor(model => model.customername)</th>
                            <th>@Html.DisplayNameFor(model => model.qty)</th>
                            <th>@Html.DisplayNameFor(model => model.pqty)</th>
                            <th>Dis.Dt</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                        @foreach (var item in sortedModel)
                        {
                            <tr>
                                
                                <td>@Html.DisplayFor(modelItem => item.sono)</td>
                                <td style="width:120px;">
                                    @*@Html.DisplayFor(modelItem => item.sodate)*@
                                    @DateTime.ParseExact(item.sodate, "yyyy-MM-dd", null).ToString("dd-MM-yyyy")
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.customername)</td>
                                <td>@Html.DisplayFor(modelItem => item.qty)</td>
                                <td>@Html.DisplayFor(modelItem => item.pqty)</td>
                                <td style="width:120px;">
                                   
                                    @if (DateTime.TryParseExact(item.dDate, "yyyy-MM-dd", null, System.Globalization.DateTimeStyles.None, out var parsedDate))
                                    {
                                        @parsedDate.ToString("dd-MM-yyyy")
                                    }
                                    else
                                    {
                                        @item.dDate
                                    }

                                </td>


                                <td >
                                    <span class="badge @GetBootstrapBadgeClass(item.status)">@Html.DisplayFor(modelItem => item.status)</span>
                                </td>
                                
                                <td style="width:150px;">
                                    <a style="display:none" id="editButton" href="@Url.Action("PendingEdit", "so_inward", new { id = item.id })" class="btn btn-success ">
                                        <i class="fas fa-pencil-alt"></i>
                                    </a>&nbsp;
                                    <a id="editButton" href="@Url.Action("PendingDetails", "so_inward", new { id = item.id })" class="btn btn-info ">
                                        <i style="color:white" class="fa fa-eye" aria-hidden="true"></i>
                                    </a>&nbsp;
                                    <a id="editButton" href="@Url.Action("EditStatus", "so_inward", new { id = item.id })" class="btn btn-warning ">
                                        <i style="color:white" class="fa fa-pencil-square-o" aria-hidden="true"></i>
                                    </a>&nbsp;
                                    <a style="display:none" id="editButton" href="@Url.Action("Delete", "so_inward", new { id = item.id })" class="btn btn-danger ">
                                        <i style="color:white" class="fas fa-trash-alt"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else if (role == "WAREHOUSE")
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
    else
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}
<style>
    #spinner {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000; /* Ensure it's above other content */
        background-color: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

<script>
    @functions {
        string GetBootstrapBadgeClass(string status)
        {
            switch (status)
            {
                case "Pending":
                    return "badge-warning";
                case "Completed":
                    return "badge-success";
                case "Cancel":
                    return "badge-danger";
                // Add more cases as needed
                default:
                    return "badge-secondary"; // Default badge style
            }
        }
    }

         
</script>


<script>

    var filteredData = [];

    // function exportToPdf() {
    //     var data = [];
    //     var heading = 'EROS GENERAL AGENCIES PVT LTD.';

    //     // Define the indices of the selected columns (0-based index)
    //     var selectedColumns = [0, 1, 2, 3, 4, 5, 6]; // Example: columns Sr.No, PO No., Supplier Name, Qty

    //     function extractDataFromAllPages() {
    //         var allData = [];
    //         //get table by their id 
    //         var dataTable = $('#dataTable').DataTable();
    //         dataTable.rows({ search: 'applied' }).every(function (rowIdx, tableLoop, rowLoop) {
    //             var rowData = [];
    //             $(this.node()).find('td').each(function (index) {
    //                 if (selectedColumns.includes(index)) {
    //                     rowData.push($(this).text().trim());
    //                 }
    //             });
    //             allData.push(rowData);
    //         });
    //         return allData;
    //     }


    //     // Extract data from all pages of the DataTable
    //     data = extractDataFromAllPages();

    //     // Filter data based on the selected date range if specified
    //     if (filteredData.length > 0) {
    //         data = filteredData.map(row => selectedColumns.map(index => row[index]));
    //         heading = 'EROS GENERAL AGENCIES PVT LTD.';
    //     }

    //     // Get the current date and time
    //     const currentDate = new Date();
    //     const formattedDate = currentDate.toLocaleDateString();
    //     const formattedTime = currentDate.toLocaleTimeString();
    //     const dateTimeString = `Generated on: ${formattedDate} at ${formattedTime}`;

    //     // Create subheading text
    //     const selectedTemplate = 'Template Name'; // Replace with the actual template name
    //     const subHeadingText = ` Orders Details (${dateTimeString})`;

    //     var element = document.createElement('div');
    //     element.innerHTML = `
    //                     <h2 style="text-align: center; font-size: 12px;">${heading}</h2>
    //                     <h6 style="text-align: center; font-size: 12px;">${subHeadingText}</h6>
    //                     <table style="border-collapse: collapse; width: 100%; font-size: 10px; margin-top: 3px;">
    //                         <thead>
    //                             <tr style="background-color: #f2f2f2;">
    //                                 ${selectedColumns.includes(0) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Ref.No</th>' : ''}
    //                                 ${selectedColumns.includes(1) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Order Dt.</th>' : ''}
    //                                 ${selectedColumns.includes(2) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Cust.Name</th>' : ''}
    //                                 ${selectedColumns.includes(3) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">SO. Qty</th>' : ''}
    //                                 ${selectedColumns.includes(4) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Rem.Qty</th>' : ''}
    //                                 ${selectedColumns.includes(5) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Dis.Dt</th>' : ''}
    //                                 ${selectedColumns.includes(6) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Status</th>' : ''}
                                    
    //                             </tr>
    //                         </thead>
    //                         <tbody>
    //                             ${data.map((row, index) => `
    //                                 <tr style="${(index + 1) % 20 === 0 ? 'page-break-after: always;' : ''}">
    //                                         ${row.map(cell => `<td style="border: 1px solid #ddd; text-align:center; padding: 2px;">${cell}</td>`).join('')}
    //                                 </tr>
    //                             `).join('')}
    //                         </tbody>
    //                     </table>
    //                 `;

    //     var options = {
    //         margin: [10, 10, 10, 10],
    //         filename: 'Order.pdf',
    //         image: { type: 'jpeg', quality: 1.0 },
    //         html2canvas: { scale: 4 },  // Increase scale for better quality
    //         jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
    //     };

    //     html2pdf().set(options).from(element).save();
    // }

    function exportToPdf() {
        $('#spinner').show();
        var data = [];
        var heading = 'EROS GENERAL AGENCIES PVT LTD.';

        // Define the indices of the selected columns (0-based index)
        var selectedColumns = [0, 1, 2, 3, 4, 5, 6]; // Example: columns Sr.No, PO No., Supplier Name, Qty

        function extractDataFromAllPages() {
            var allData = [];
            var dataTable = $('#dataTable').DataTable();
            dataTable.rows({ search: 'applied' }).every(function (rowIdx, tableLoop, rowLoop) {
                var rowData = [];
                $(this.node()).find('td').each(function (index) {
                    if (selectedColumns.includes(index)) {
                        rowData.push($(this).text().trim());
                    }
                });
                allData.push(rowData);
            });
            return allData;
        }

        // Extract data from all pages of the DataTable
        data = extractDataFromAllPages();

        // Filter data based on the selected date range if specified
        if (filteredData.length > 0) {
            data = filteredData.map(row => selectedColumns.map(index => row[index]));
            heading = 'EROS GENERAL AGENCIES PVT LTD.';
        }

        // Get the current date and time
        const currentDate = new Date();
        const formattedDate = ("0" + currentDate.getDate()).slice(-2) + "-" +
            ("0" + (currentDate.getMonth() + 1)).slice(-2) + "-" +
            currentDate.getFullYear();
        const formattedTime = currentDate.toLocaleTimeString();
        const dateTimeString = `Generated on: ${formattedDate} at ${formattedTime}`;

        // Create subheading text
        const selectedTemplate = 'Template Name'; // Replace with the actual template name
        const subHeadingText = ` Orders Details (${dateTimeString})`;

        var element = document.createElement('div');
        element.innerHTML = `
            <h2 style="text-align: center; font-size: 12px;">${heading}</h2>
            <h6 style="text-align: center; font-size: 12px;">${subHeadingText}</h6>
            <table style="border-collapse: collapse; width: 100%; font-size: 10px; margin-top: 3px;">
                <thead>
                    <tr style="background-color: #f2f2f2;">
                        ${selectedColumns.includes(0) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Ref.No</th>' : ''}
                        ${selectedColumns.includes(1) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Order Dt.</th>' : ''}
                        ${selectedColumns.includes(2) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Cust.Name</th>' : ''}
                        ${selectedColumns.includes(3) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">SO. Qty</th>' : ''}
                        ${selectedColumns.includes(4) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Rem.Qty</th>' : ''}
                        ${selectedColumns.includes(5) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Dis.Dt</th>' : ''}
                        ${selectedColumns.includes(6) ? '<th style="border: 1px solid #ddd; padding: 2px;text-align:center;">Status</th>' : ''}
                    </tr>
                </thead>
                <tbody>
                    ${data.map(row => `
                        <tr>
                            ${row.map(cell => `<td style="border: 1px solid #ddd; text-align:center; padding: 2px;">${cell}</td>`).join('')}
                        </tr>
                    `).join('')}
                </tbody>
            </table>
        `;

        // PDF generation options
        var options = {
            margin: [10, 10, 10, 10],
            filename: 'Order.pdf',
            image: { type: 'jpeg', quality: 1.0 },
            html2canvas: { scale: 4 },  // Increase scale for better quality
            jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
        };

        // Generate and save the PDF
        // html2pdf().set(options).from(element).save();
        html2pdf()
            .set(options)
            .from(element)
            .save()
            .then(() => {
                // Hide spinner on success
                $('#spinner').hide();
            })
            .catch(error => {
                console.error('Error generating PDF:', error);
                // Hide spinner on error (optional, depends on your error handling strategy)
                $('#spinner').hide();
            });
    }




</script>











