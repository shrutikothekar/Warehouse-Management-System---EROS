@model eros.Models.PhysicalStockTake
@{
    ViewData["Title"] = "Resume";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
<style>
    label {
        font-size: small; /* You can also use specific values like 10px or 0.8em */
        font-weight: 700;
    }

    .small-heading {
        font-size: 1rem; /* Adjust the font size as needed */
    }
</style>
<style>
    .small-heading {
        font-size: 1rem; /* Adjust the font size as needed */
    }
</style>
<div class="mt-3">
    <div class="card mb-3">
        <div class="card-header bg-dark text-white">
            <div class="d-flex align-items-baseline">
                <h5 class="mx-auto font-weight-bolder small-heading">Physical Stock Take Operation</h5>
                <label class="text-white font-weight-bolder mr-5" id="count"></label>
                <a asp-action="Index" class="btn btn-success text-white"><i class="fa fa-reply"></i> Back</a>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div id="formContainer">
                    <form id="PhysicalStockForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="row">
                            @* Storage operation *@
                            <div class="form-group col-sm-3 mt-3">
                                <label asp-for="locationcode" class="control-label"></label>
                                <input asp-for="locationcode" class="form-control" /> @*onkeyup="return checkEnter(event)"*@
                                @*<input type="text" id="locationcode" value="@Model.locationcode" />*@
                                <span class="text-danger"></span>
                            </div>
                            @* product code *@
                            <div class="form-group col-sm-3 mt-3">
                                <label asp-for="productcode" class="control-label"></label>
                                @* <input asp-for="productcode" class="form-control" autocomplete="off" onchange="splitProductCode()" /> *@
                                <input asp-for="productcode" id="productcode" class="form-control" autocomplete="off" onkeypress="Insertpickdata(event)" />
                                <span class="text-danger"></span>
                            </div>
                            @* Batch code *@
                            <div class="form-group col-sm-3 mt-3">
                                <label asp-for="batchcode" class="control-label"></label>
                                <input asp-for="batchcode" class="form-control" />
                                <span class="text-danger"></span>
                            </div>
                            @* Box no *@
                            <div class="form-group col-sm-3 mt-3">
                                <label asp-for="boxes" class="control-label"></label>
                                <input asp-for="boxes" class="form-control" />
                                <span class="text-danger"></span>
                            </div>
                            <div style="display:none;" class="form-group col-sm-3 mt-3">
                                <label asp-for="storageflag" class="control-label"></label>
                                <input asp-for="storageflag" class="form-control" />
                                <span class="text-danger"></span>
                            </div>

                            <div style="display:none;" class="form-group col-sm-3 mt-3">
                                @*  <div class="form-group col-sm-3 mt-3"> *@
                                <label asp-for="physicalid" class="control-label"></label>
                                <input asp-for="physicalid" id="pstid" class="form-control" />
                                <span class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-2 mt-3">
                                <input type="button" class="btn btn-success" value="Insert" hidden="hidden" id="btnInsert" />
                            </div>
                        </div>
                        <br />
                        <br />
                        <table class="table table-striped bg-white" id="DataInsert">
                            <thead class=" text-center">
                                <tr>
                                    <th> Location</th>
                                    <th>Pro. Code</th>
                                    <th>Batch Code</th>
                                    @* <th>Box No.</th> *@
                                    @* <th>Count</th> *@
                                    <th>Boxes</th>
                                    <th>Storage Flag</th>
                                    <th>Grno</th>
                                    <th>Damage</th>
                                    @* <th>Remark</th>  *@
                                    <th style="width:150px;">Action</th>
                                </tr>
                            </thead>
                            <tbody class=" text-center">
                            </tbody>
                        </table>
                        <br />
                        <input type="button" class="btn btn-primary " value="Save" id="btnSave" />
                        <div class="row mt-3">
                            <div class="col-sm-4">
                                @*<input type="button" id="btnSave" value="Save All" />
                                <div class="form-group text-center col-sm-8 mt-8">
                                </div> <input type="submit" value="Allot" class="btn btn-primary" />*@
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal HTML -->
<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Partially Shipper</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @* product name *@
                @* <div class="form-group col-sm-6 mt-3"> *@
                <label for="productname" class="control-label">Product Name</label>
                <select class="form-control" id="productname">
                </select>
                <span class="text-danger"></span>
                @*  </div> *@
                @* <div class="form-group col-sm-6 mt-3"> *@
                <label for="grnno" class="control-label mt-3">Grnno</label>
                <select class="form-control" id="grnno">
                </select>
                <span class="text-danger"></span>
                @*   </div> *@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmSave">Submit</button>
            </div>
        </div>
    </div>
</div>

<!-- Example using CDN -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    var scanBuffer = "";  // Buffer to hold the scanned data
    var scanTimeout;
    function Insertpickdata(event) {
        if (event.key === "Enter") {
            event.preventDefault();
            console.log("CALL...");
            // Capture the value of the productcode field
            var productCode = document.getElementById("productcode").value.trim();
            // Ensure productCode is not undefined or empty before adding to the buffer
            if (productCode) {
                console.log("Scan Buffer before append: " + scanBuffer);
                scanBuffer += productCode;
                console.log("Scan Buffer after append: " + scanBuffer);
            } else {
                console.log("Warning: productCode is undefined or empty");
            }
            // Clear the input field for the next scan
            document.getElementById("productcode").value = "";
            // Clear any previous timeout to debounce
            clearTimeout(scanTimeout);
            // Set a delay before processing the scanBuffer to ensure full data capture
            scanTimeout = setTimeout(function () {
                // Process the buffer after 200ms delay (adjustable based on scanner speed)
                processScanData(scanBuffer);
                // Reset the buffer
                scanBuffer = "";
            }, 200);  // Debounce timeout to handle fast scanning
        }
    }
    function processScanData(productCode) {
        if (productCode !== "") {
            console.log("Processing: " + productCode);
            // Use regular expression to split the data by $ and remove empty parts
            var parts = productCode.toUpperCase().split(/[,|$]+/).filter(Boolean);
            console.log("Parts length: " + parts.length);

            // Ensure we have enough parts to extract data
            if (parts.length >= 6) {
                var pro = parts[0].trim();  // Make sure to trim any leading/trailing spaces
                var box = parts[3].trim();
                var batch = parts[5].trim();
                var grn = parts[2].trim();
                var loc = $("#locationcode").val();

                console.log("Product Code: " + pro);

                // Ensure all necessary parts are non-empty
                if (pro && box && batch && grn && loc) {
                    $.ajax({
                        type: 'POST',
                        url: '/PhysicalStockTake/saveInSTList',
                        data: {
                            pro: pro,
                            batch: batch,
                            grn: grn,
                            box: box,
                            loc: loc,
                        },
                        success: function (response) {
                            if (response.success) {
                                var tbody = $('#DataInsert tbody');
                                var tr = $('<tr></tr>');

                                tr.append('<td>' + loc + '</td>');
                                tr.append('<td>' + pro + '</td>');
                                tr.append('<td>' + batch + '</td>');
                                tr.append('<td>' + box + '</td>');
                                tr.append('<td>' + "ST" + '</td>');
                                tr.append('<td>' + grn + '</td>');
                                tr.append('<td><input id="' + pro + '" class="btn btn-sm btn-outline-warning" type="button" value="Damage" onclick="Damage(this, \'' + pro + '\', \'' + batch + '\', \'' + box + '\',\'' + grn + '\'); " /></td>');
                                tr.append('<td><input class="btn btn-danger" type="button" value="Delete" onclick="Remove(this);" /></td>');
                                tbody.prepend(tr);

                                var count = tbody.find('tr').length;
                                $("#count").text("Total Scan: " + count);

                                document.getElementById("productcode").focus();
                            } else {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Warning',
                                    text: response.message,
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong. Please try again later.',
                            });
                            console.log('An error occurred:', error);
                        }
                    });
                } else {
                    console.error("Invalid data parts.");
                }
            } else {
                console.error("Invalid product code format");
            }
        } else {
            console.log("Empty product code");
        }
    }
</script>
<script>
    // This function will be called when the document (page) is ready
    $(document).ready(function () {
        // Code to be executed after the page is loaded
        // Set focus to the input element with id="inwardslipno"

        document.getElementById("locationcode").value = '';
        document.getElementById("productcode").value = '';
        document.getElementById("batchcode").value = '';
        document.getElementById("boxes").value = '';

        const inputElement = $('#locationcode');
        // console.log(" Input":-inputElement);
        if (inputElement.length > 0) {
            inputElement.focus();
        }
    });
</script>
<script>
    // Get a reference to the input box
    var inputBox = document.getElementById("locationcode");
    // console.log(inputBox);
    // Add an event listener for the key press event
    inputBox.addEventListener("keyup", function (event) {
        // Get the pressed key
        if (event.keyCode === 13) {

            document.getElementById("productcode").focus();
            event.preventDefault();
        }

        // Display the pressed key in a separate div
        //var outputDiv = document.getElementById("output");
        //outputDiv.innerHTML = "Key Pressed: " + keyPressed;
    });
</script>



<script>
    function splitlocation() {
        document.getElementById("productcode").focus();
    }


    function splitProductCode() {

        var part1;
        var part2;
        var box;
        var part3;
        var grnno;
        var locationcode;
        var pattern = /[^a-zA-Z0-9\-\/$, ]/g;

        var test = document.getElementById("boxes").value.trim().replace(pattern, '');
        var test1 = document.getElementById("batchcode").value.trim().replace(pattern, '');


        document.getElementById("boxes").value = test;
        document.getElementById("batchcode").value = test1;
        //document.getElementById('hide').style.display = 'none';
        var productCode = document.getElementById("productcode").value;
        // console.log(document.getElementById("productcode").value);bod
        console.log(productCode);
        //var commaIndex = productCode.indexOf(',');
        // var parts = productCode.split('$');
        // var parts = productCode.split('$');
        var parts = productCode.split(/[,|$]/);


        if (parts.length > 0 && parts.length == 6) {
            part1 = parts[0];
            console.log(part1);

            part2 = parts[3];
            // console.log("Part " + part2);
            //--------------------------
            var part2_1 = part2.split('-');
            // console.log(part2_1);
            box = part2_1[1];
            console.log(box);
            //--------------------------
            part3 = parts[5];
            console.log(part3);

            var Grnno = parts[2];
            console.log("Grno:-" + Grnno);

            locationcode = document.getElementById("locationcode").value;
            console.log(locationcode)

            document.getElementById("productcode").value = part1;
            // document.getElementById("boxno").value = box;
            document.getElementById("boxes").value = part2;
            document.getElementById("batchcode").value = part3;

            document.getElementById("grnno").value = Grnno;
            document.getElementById("btnInsert").focus();

            // comparing the locationcode,productcode,boxno,batchcode,with Storage operation
            // CompareWithStorage(locationcode, part1, part3, part2)

            // CheckExistence(locationcode, part1, part3, part2);
            CheckExistence(locationcode, part1, part3, part2, Grnno);

        }
    }


    // inserting into table below
    function CheckExistence(locationcode, productCode, batchCode, part2, grnno) {
        var count = 0;
        var table = $("#DataInsert tbody");
        // console.log(productCode)
        var product1 = productCode.trim();
        // Check if the product code is already in the table

        // var ProductRow = table.find('tr td:contains("' + product1 + '")');
        var ProductRow = table.find('tr:has(td:contains("' + product1 + '"))')

        // console.log("product No:-" + ProductRow.length);

        if (ProductRow.length > 0) {
            var productRow = table.find('tr:has(td:contains("' + product1 + '"))');
            // console.log("ExistingBoxNo :-" + part2BoxNo.length);

            // Product code exists in some row
            if (productRow.length > 0) {
                var part2Cell = productRow.find('td:contains("' + part2 + '")');


                if (part2Cell.length > 0) {

                    var batchcode = productRow.find('td:contains("' + batchCode + '")');

                    if (batchcode.length > 0) {


                        var grnno = productRow.find('td:contains("' + grnno + '")');

                        if (grnno.length > 0) {

                            // Both product code and part2 exist in the same row
                            console.log("Both product code,Boxes and batchcode,grnno already exist in the same row");
                            document.getElementById("productcode").value = "";
                            document.getElementById("boxes").value = "";
                            document.getElementById("batchcode").value = "";
                            document.getElementById("grnno").value = "";
                        }
                        else {

                            appendNewRow(locationcode, productCode, batchCode, part2, "ST", grnno);
                            count = table.find('tr').length;
                            // document.getElementById("count") = count;
                            $("#count").text("Total Scan: " + count);

                        }


                    }
                    else {
                        appendNewRow(locationcode, productCode, batchCode, part2, "ST", grnno);
                        count = table.find('tr').length;
                        // document.getElementById("count") = count;
                        $("#count").text("Total Scan: " + count);
                    }

                }
                else {
                    //console.log("Part2 does not exist for the given product code in the same row:-" + part2)
                    //Product code exists, but part2 does not exist in the same row
                    // console.log("Part2 does not exist for the given product code in the same row");
                    // Split part2 and store in a variable (e.g., abc)
                    var abc = part2.split('-')[1];
                    // console.log("abc:-" + abc)

                    // appendNewRow(locationcode, productCode, batchCode, boxNo, 1, part2);
                    appendNewRow(locationcode, productCode, batchCode, part2, "ST", grnno);
                    count = table.find('tr').length;
                    // document.getElementById("count") = count;
                    $("#count").text("Total Scan: " + count);



                    // ----------------END---------
                }
            }
            else {
                // if part2 is different
                document.getElementById("productcode").value = "";
                document.getElementById("boxes").value = "";
                document.getElementById("batchcode").value = "";
                document.getElementById("grnno").value = "";
                appendNewRow(locationcode, productCode, batchCode, part2, "ST", grnno);
                count = table.find('tr').length;
                // document.getElementById("count") = count;
                $("#count").text("Total Scan: " + count);

            }
        }
        else {
            // Product code is not in the table, add a new row
            // console.log("Product is not in the table. Adding a new row...");
            // if part2 is different
            document.getElementById("productcode").value = "";
            document.getElementById("boxes").value = "";
            document.getElementById("batchcode").value = "";
            document.getElementById("grnno").value = "";
            appendNewRow(locationcode, productCode, batchCode, part2, "ST", grnno);
            count = table.find('tr').length;
            // document.getElementById("count") = count;
            $("#count").text("Total Scan: " + count);

        }
    }

    function appendNewRow(locationcode, productCode, batchCode, part2, storageflag, grnno) {
        var table = $("#DataInsert tbody");

        // Append a new row with the provided data
        var newRow = $("<tr>");
        newRow.append("<td>" + locationcode + "</td>");
        newRow.append("<td>" + productCode + "</td>");
        newRow.append("<td>" + batchCode + "</td>");
        // newRow.append("<td>" + boxNo + "</td>");
        /* newRow.append("<td>" + count + "</td>"); */ // Assuming the count starts at 1
        newRow.append("<td>" + part2 + "</td>");
        newRow.append("<td>" + storageflag + "</td>");
        newRow.append("<td>" + grnno + "</td>");
        // newRow.append("<td style='display:none;'>" + storageflag + "</td>");
        var buttonId = productCode;
        // console.log("Boxes " + part2);

        //-----------------------------
        // Add 'remark' cell and input field
        // var remarkCell = $("<td>");
        // var remarkInput = $("<input>", { type: "text", name: "remark", id: "remark_" + productCode });

        // remarkInput.css("display", result === "Non Exist" ? "block" : "none");
        // remarkCell.append(remarkInput);
        // newRow.append(remarkCell);
        // newRow.append('<td><input id="' + buttonId + '" class="btn btn-sm btn-outline-warning" type="button" value="Damage" onclick="Damage(this, \'' + buttonId + '\', \'' + batchCode + '\', \'' + part2 + '\',\'' + grnno + '\'); " /></td>');
        newRow.append('<td><input class="btn btn-danger" type="button" value="Delete" onclick="Remove(this);" /></td>');
        table.append(newRow);

        document.getElementById("productcode").value = "";
        document.getElementById("boxes").value = "";
        document.getElementById("batchcode").value = "";
        document.getElementById("grnno").value = "";
    }


    // function Damage(button, productCode, batchCode, part2, grnno) {
    //     // Get the closest row to the clicked button
    //     var row = $(button).closest("tr");

    //     // Find the product code, batch code, and boxes within the same row
    //     var rowProductCode = row.find("td:eq(1)").text(); // Assuming product code is in the second column
    //     console.log("ProductCode:-" + productCode);
    //     var rowBatchCode = row.find("td:eq(2)").text(); // Assuming batch code is in the third column
    //     console.log("BatchCode:-" + batchCode);
    //     var rowBoxes = row.find("td:eq(3)").text(); // Assuming boxes is in the fourth column
    //     console.log("rowBoxes:-" + part2);

    //     var grnnoo = row.find("td:eq(5)").text(); // Assuming boxes is in the fourth column
    //     console.log("grnno:-" + grnnoo);


    //     // Check if the combination of product code, batch code, and boxes matches the provided values
    //     if (rowProductCode === productCode && rowBatchCode === batchCode && rowBoxes === part2 && grnnoo == grnno) {
    //         // Show SweetAlert confirmation dialog
    //         Swal.fire({
    //             title: "Confirmation",
    //             text: "Are you sure this is a Damage product?",
    //             icon: "warning",
    //             showCancelButton: true,
    //             confirmButtonColor: "#3085d6",
    //             cancelButtonColor: "#d33",
    //             confirmButtonText: "Confirm"
    //         }).then((result) => {
    //             if (result.isConfirmed) {
    //                 // Get the storage flag cell within the same row
    //                 var storageFlagCell = row.find("td:eq(4)");

    //                 // Update the storage flag to "DMG" for the same row
    //                 storageFlagCell.text("DMG");

    //                 // Change the text of the "Damage" button to "Damaged" for the same row
    //                 $(button).val("Damaged");

    //                 // Notify the user about the flag update
    //                 Swal.fire("Success", "Damaged Successfully " + productCode, "success");
    //             }
    //         });
    //     } else {
    //         // Display an error message if the combination doesn't match
    //         Swal.fire("Error", "Unable to find the row for Damage.", "error");
    //     }
    // }

    function Damage(button, productCode, batchCode, part2, grnno) {
        var row = $(button).closest("tr");

        console.log("call");

        var rowProductCode = row.find("td:eq(1)").text();
        var rowBatchCode = row.find("td:eq(2)").text();
        var rowBoxes = row.find("td:eq(3)").text();
        var grnnoo = row.find("td:eq(5)").text();

        console.log(productCode + " == " + rowProductCode);
        console.log(batchCode + " == " + rowBatchCode);
        console.log(part2 + " == " + rowBoxes);
        console.log(grnno + " == " + grnnoo);

        if (rowProductCode === productCode && rowBatchCode === batchCode && rowBoxes === part2 && grnnoo == grnno) {
            Swal.fire({
                title: "Confirmation",
                text: "Are you sure this is a Damage product?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Confirm"
            }).then((result) => {
                if (result.isConfirmed) {
                    // Update storage flag to DMG in the UI
                    var storageFlagCell = row.find("td:eq(4)");
                    console.log("storageFlagCell : " + storageFlagCell);
                    storageFlagCell.text("DMG");

                    $(button).val("Damaged");
                    Swal.fire("Success", "Damaged Successfully " + productCode, "success");
                    // // Call AJAX to update the backend
                    // $.ajax({
                    //     type: 'POST',
                    //     url: '/PhysicalStockTake/UpdateDamageStatus',  // Backend URL to update damage status
                    //     data: {
                    //         productCode: productCode,
                    //         batchCode: batchCode,
                    //         box: part2,
                    //         grnno: grnno
                    //     },
                    //     success: function (response) {
                    //         if (response.success) {
                    //             Swal.fire("Success", "Damaged Successfully " + productCode, "success");
                    //         } else {
                    //             Swal.fire("Error", response.message, "error");
                    //         }
                    //     },
                    //     error: function (xhr, status, error) {
                    //         Swal.fire({
                    //             icon: 'error',
                    //             title: 'Oops...',
                    //             text: 'Failed to update damage status. Please try again later.',
                    //         });
                    //         console.error('Error updating damage status:', error);
                    //     }
                    // });
                }
            });
        } else {
            Swal.fire("Error", "Unable to find the row for Damage.", "error");
        }
    }


</script>

<script>
    // function Remove(button) {
    //     //Determine the reference of the Row using the Button.
    //     var row = $(button).closest("TR");
    //     var prd = $("TD", row).eq(1).html();
    //     // var qty = $("TD", row).eq(1).html();
    //     var btch = $("TD", row).eq(2).html();
    //     var box = $("TD", row).eq(3).html();
    //     var lcn = $("TD", row).eq(0).html();

    //     if (confirm("Do you want to delete: ProductCode:-" + prd + ", Box: " + box + ", Batch: " + btch + ",Location : " + lcn)) {
    //         // Delete the table row.
    //         row.remove();

    //         // Save the scanned data for future reference.
    //         // Here, you can perform the desired actions to save the scanned data.
    //         // For example, you can store the values in an array or send them to a server using an AJAX request.
    //         saveScannedData(prd, box, btch);
    //     }
    // };

    function Remove(button) {
        // Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        // var loc = $("TD", row).eq(0).html();
        // var pro = $("TD", row).eq(1).html();
        // var btch = $("TD", row).eq(2).html();
        // var box = $("TD", row).eq(3).html();
        // var grn = $("TD", row).eq(4).html();

        var pro = $("TD", row).eq(1).html();
        var btch = $("TD", row).eq(2).html();
        var box = $("TD", row).eq(3).html();
        var grn = $("TD", row).eq(5).html();

        // Print each variable to the console
        console.log("Product Code: " + pro);
        // console.log("Loc: " + loc);
        console.log("Batch Code: " + btch);
        console.log("Box No.: " + box);
        console.log("GRN No.: " + grn);
        // console.log("Location: " + lcn);
        // Use SweetAlert for delete confirmation
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to delete ?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel'
        }).then((result) => {
            if (result.isConfirmed) {

                // Call AJAX to update the backend
                $.ajax({
                    type: 'POST',
                    url: '/PhysicalStockTake/DeleteFromList',  // Backend URL to update damage status
                    data: {
                        productCode: pro,
                        batchCode: btch,
                        box: box,
                        grnno: grn
                    },
                    success: function (response) {
                        if (response.success) {
                            // Swal.fire("Success", "Removed Successfully " + productCode, "success");
                            row.remove();
                            // saveScannedData(pro, box, btch, grn);
                            Swal.fire(
                                'Deleted!',
                                'The record has been deleted.',
                                'success'
                            );
                            return;
                        } else {
                            Swal.fire("Error", response.message, "error");
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Failed to update damage status. Please try again later.',
                        });
                        console.error('Error updating damage status:', error);
                    }
                });




            }
        });
    }


    $("body").on("click", "#btnSave", function () {
        // console.log("Save button");
        var storage = new Array();
        if (document.getElementById("boxes").value == "") {
            $("#DataInsert tbody tr").each(function () {
                var row = $(this);
                var customer = {};
                customer.locationcode = row.find("TD").eq(0).html();
                customer.productcode = row.find("TD").eq(1).html();
                console.log("productcode:-" + customer.productcode);
                //customer.qty = row.find("TD").eq(1).html();
                customer.batchcode = row.find("TD").eq(2).html();
                console.log("batchcode:-" + customer.batchcode);
                // customer.boxno = row.find("TD").eq(3).html();
                console.log("locationcode:-" + customer.locationcode);
                // customer.count = row.find("TD").eq(4).html();
                customer.boxes = row.find("TD").eq(3).html();
                console.log("boxes:-" + customer.boxes);

                customer.storageflag = row.find("TD").eq(4).html();
                console.log("storageflag:-" + customer.storageflag);
                customer.grnno = row.find("TD").eq(5).html();
                // customer.storageflag = row.find("TD").eq(4).html();
                // console.log("storageflag:-" + customer.storageflag);

                customer.physicalid = document.getElementById("pstid").value;
                console.log("physicalid:-" + customer.physicalid);

                // customer.physicalid = document.getElementById("pstid").value;
                // console.log("PSTid:-" + customer.physicalid);
                storage.push(customer);
                // console.log(storage);
            });

            $.ajax({
                type: "POST",
                url: '/PhysicalStockTake/update',
                data: { storage },
                success: function (r) {
                    console.log("done");
                    console.log("Responce : " + r);
                    if (r && r.success) {
                        console.log("success");
                        //console.log("Record(s) inserted.");
                        // Show a success SweetAlert
                        document.getElementById("productcode").value = "";
                        //document.getElementById("qty").value = "";
                        document.getElementById("batchcode").value = "";
                        document.getElementById("boxes").value = "";
                        document.getElementById("locationcode").value = "";
                        document.getElementById("storageflag").value = "";
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: r.message,
                        }).then(() => {
                            // Redirect to Index action after SweetAlert is closed
                            window.location.href = "/PhysicalStockTake/Index";
                        });

                        // window.location = "/PhysicalStockTake/Index";
                    }
                    else {
                        console.log("Not success");
                        // Count is less than 0, show SweetAlert
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: r.message,
                        });

                        document.getElementById("productcode").value = "";
                        //document.getElementById("qty").value = "";
                        document.getElementById("batchcode").value = "";
                        document.getElementById("boxes").value = "";
                        document.getElementById("locationcode").value = "";
                        document.getElementById("storageflag").value = "";
                        // window.location = "/PhysicalStockTake/Index";
                    }
                },
                error: function (r) {
                    console.log("Not Done Error");
                    // console.log(r.responseText);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: r.message,
                    });
                }
            });
        }

        else {
        }
    });

</script>
<script>
    $(function () {
        $('#btnInsert').click(function () {
            if ($('#productcode').val() != "" && $('#boxno').val() != "" && $('#batchcode').val() != "") {
                var flag = "0";
                $("#DataInsert tbody tr").each(function () {
                    var row = $(this);
                    if (row.find("TD").eq(3).html() == $('#boxes').val() && row.find("TD").eq(1).html() == $('#productcode').val()) {
                        flag = "1";
                    }

                });
                if (flag == "0") {
                    var tbody = $('#DataInsert tbody');
                    var tr = $('<tr></tr>');
                    tr.append('<td>' + $('#locationcode').val() + '</td>');
                    tr.append('<td>' + $('#productcode').val() + '</td>');
                    //  tr.append('<td>' + $('#qty').val() + '</td>');
                    tr.append('<td>' + $('#batchcode').val() + '</td>');
                    tr.append('<td>' + $('#boxes').val() + '</td>');
                    tr.append('<td><input class="btn btn-danger" type="button" value="Delete" onclick= "Remove(this);" /></td>')
                    tbody.append(tr);
                    document.getElementById("productcode").value = "";
                    // document.getElementById("qty").value = "";
                    document.getElementById("boxes").value = "";
                    document.getElementById("batchcode").value = "";
                    document.getElementById("productcode").focus();
                    //document.getElementById("locationcode").value = "";
                }
                else {
                    console.log("Product with Box No Already Added!");
                    document.getElementById("productcode").value = "";
                    // document.getElementById("qty").value = "";
                    document.getElementById("boxes").value = "";
                    document.getElementById("batchcode").value = "";
                    document.getElementById("productcode").focus();
                }

            }

        });

    });
</script>



@* <script>
    function splitlocation() {
        document.getElementById("productcode").focus();
    }

    function splitProductCode() {
        //document.getElementById('hide').style.display = 'none';
        var productCode = document.getElementById("productcode").value;
        // console.log(document.getElementById("productcode").value);bod
        console.log(productCode);
        //var commaIndex = productCode.indexOf(',');
        var parts = productCode.split(',');

        if (parts.length > 0 && parts.length == 6) {
            var part1 = parts[0];
            console.log(part1);

            var part2 = parts[3];
            console.log(part2);
            //--------------------------
            var part2_1 = part2.split('-');
            console.log(part2_1);
            part2 = part2_1[1];
            //--------------------------
            var part3 = parts[5];
            console.log(part3);
            var Grnno = parts[2];
            console.log(Grnno);

            var locationcode = document.getElementById("locationcode").value;
            console.log(locationcode)

            document.getElementById("productcode").value = part1;
            document.getElementById("boxno").value = part2;
            document.getElementById("batchcode").value = part3;
            document.getElementById("btnInsert").focus();

            // CheckExistence(locationcode, part1, part3, part2);
            CheckExistence(part1);
        }
    }
    // Function to check existence in the database
    function CheckExistence(productCode) {
        existenceFlag = ""; // Reset the flag
        // Make an AJAX call or use your preferred method to check existence in the database
        // Assume you have a function 'checkExistenceInDatabase' that returns the flag
        // You may need to adapt this part based on your backend/database implementation
        // Example AJAX call using jQuery
        $.ajax({
            url: '/PhysicalStockTake/CheckExistence',
            method: 'POST',
            data: {

                productCode: productCode,

            },
            success: function (response) {
                handleExistenceResponse(response);
            },
            error: function (xhr, status, error) {
                console.error("Error checking existence:", error);
                // Log additional information
                console.log("XHR status:", xhr.status);
                console.log("XHR responseText:", xhr.responseText);
                // console.log("An error occurred while checking existence. Please try again later.");
            }
        });
    }

    // Function to handle the existence response
    function handleExistenceResponse(response) {
        var existenceFlag = response.flag;


        // Now you can handle the existence flag accordingly
        if (existenceFlag === "Exist") {
            console.log("Product with Box No Already Added!");
            // Additional actions for existence...
        } else if (existenceFlag === "Not Exist") {

            console.log(existenceFlag);
            // Product does not exist, proceed with other actions or add to the table...
            // You may want to consider calling another function to handle non-existence
            // For example: handleNonExistence();
            // $(function () {
            if ($('#productcode').val() != "" && $('#boxno').val() != "undefined" && $('#batchcode').val() != "undefined") {
                var flag = "0";
                $("#DataInsert tbody tr").each(function () {
                    var row = $(this);

                    if (row.find("TD").eq(3).html() == $('#boxno').val() && row.find("TD").eq(1).html() == $('#productcode').val()) {
                        flag = "1";
                    }

                });
                if (flag == "0") {
                    var tbody = $('#DataInsert tbody');
                    var tr = $('<tr></tr>');
                    tr.append('<td>' + $('#locationcode').val() + '</td>');
                    tr.append('<td>' + $('#productcode').val() + '</td>');
                    //  tr.append('<td>' + $('#qty').val() + '</td>');
                    tr.append('<td>' + $('#batchcode').val() + '</td>');
                    tr.append('<td>' + $('#boxno').val() + '</td>');
                    // Append the existenceFlag to the table
                    tr.append('<td>' + existenceFlag + '</td>');

                    tr.append('<td><input class="btn btn-danger" type="button" value="Delete" onclick= "Remove(this);" /></td>')
                    tbody.append(tr);
                    document.getElementById("productcode").value = "";
                    // document.getElementById("qty").value = "";
                    document.getElementById("boxno").value = "";
                    document.getElementById("batchcode").value = "";
                    document.getElementById("productcode").focus();
                    //document.getElementById("locationcode").value = "";
                }
                else {
                    console.log("Product with Box No Already Added!");
                    document.getElementById("productcode").value = "";
                    // document.getElementById("qty").value = "";
                    document.getElementById("boxno").value = "";
                    document.getElementById("batchcode").value = "";
                    document.getElementById("productcode").focus();
                }

            }

            // });

        } else {
            // Handle other cases if needed...
        }
    }

</script> *@