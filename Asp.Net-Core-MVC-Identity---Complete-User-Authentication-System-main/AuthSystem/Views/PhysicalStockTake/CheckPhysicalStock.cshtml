@* @model eros.Models.CheckPhysicalStock *@
@model IEnumerable<eros.Models.CheckPhysicalStock>

@{
    ViewData["Title"] = "CheckPhysicalStock";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
@if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN")
    {

    }
    else if (role == "HOSITE")
    {

    }
    else if (role == "WAREHOUSE")
    {

    }
    else
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Include Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" />

    <!-- Include DataTables CSS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.2/css/jquery.dataTables.min.css" />
    <style>
        .SendHO {
            margin-left: 15px;
        }

        .buttonsize {
            position: relative;
            right: -182px;
            top: 51px;
        }

        .received-symbol {
            color: green; /* Change the color to your preference */
            /* margin-left: 5px; */ /* Adjust the spacing as needed */
            /*  font-size:20px; */
            position: relative;
            right: 435px;
            /* font-weight:bolder;
                            font-size: 5.5em;
                            line-height: 1; */
        }
        /*    .sticky-header {
                            position: -webkit-sticky;
                            position: sticky;
                            top: 0;
                            background-color: #343a40;=
                            padding: 10px;
                            z-index: 1000;
                            margin-bottom: 20px;
                        } */

    </style>
</head>
<body>
    <div class="mt-3">
        <div class="card mb-3">
            <div class="card-header bg-dark text-white">
                <div class="d-flex align-items-baseline">
                    <h5 class="mx-auto font-weight-bolder sticky-header">Validate Physical Stock </h5>
                    <a asp-action="Damage" style="display:none" class="btn btn-sm btn-warning">
                        @* <i class="fas fa-exclamation-circle"></i>Damage Product<span class="badge badge-light"></span> *@
                        Damage Product
                    </a>
                    @*  @if (Model.Any())
                    {
                    <span class="received-symbol">.</span>
                    } *@
                    @* <a asp-action="Index" class="btn btn-success text-white"><i class="fa fa-reply"></i> Back</a> *@
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                        <thead class="thead-light text-center">
                            <tr>
                                <th style="text-align:center">
                                    @Html.DisplayNameFor(model => model.physicalid)
                                </th>
                                @* <th>
                                @Html.DisplayNameFor(model => model.boxno)
                                </th> *@
                                @* <th>
                                @Html.DisplayNameFor(model => model.batchcode)
                                </th> *@
                                @* <th>
                                @Html.DisplayNameFor(model => model.locationcode)
                                </th> *@
                                @*   <th>
                                @Html.DisplayNameFor(model => model.boxes)
                                </th> *@
                                <th style="text-align:center">
                                    @Html.DisplayNameFor(model => model.boxcount)
                                </th>
                                <th style="width:150px;">Action</th>
                            </tr>
                        </thead>
                        <tbody class=" text-center">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td style="text-align:center">
                                        @Html.DisplayFor(modelItem => item.physicalid)
                                    </td>
                                    @*  <td>
                                @Html.DisplayFor(modelItem => item.boxno)
                                </td> *@
                                    @* <td>
                                @Html.DisplayFor(modelItem => item.batchcode)
                                </td> *@
                                    @* <td>
                                @Html.DisplayFor(modelItem => item.locationcode)
                                </td> *@
                                    @*  <td>
                                @Html.DisplayFor(modelItem => item.boxes)
                                </td> *@
                                    <td style="text-align:center">
                                        @Html.DisplayFor(modelItem => item.boxcount)
                                    </td>
                                    @* <td>
                                @Html.DisplayFor(modelItem => item.count)
                                </td> *@
                                    @*   <td>
                                @Html.DisplayFor(modelItem => item.flag)
                                </td> *@
                                    <td id="hidetable" style="text-align:center">
                                        <a asp-action="checkphysicaldetails" asp-route-id="@item.physicalid" class="btn btn-sm bg-warning">
                                            <i style="color:white" class="fa fa-eye" aria-hidden="true"></i> Details
                                        </a>
                                        @* <a asp-action="Resumepst" asp-route-id="@item.pstid" class="btn btn-success p-1">
                                    <i class="fas fa-pencil-alt"></i>
                                    </a> *@
                                        <a asp-action="Pst_Excel" asp-route-id="@item.physicalid" class="btn btn-success p-1 btn-sm">
                                            <i class="fa fa-file-excel"></i> Excel
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div>
        <a id="validateButton" class="btn btn-sm btn-primary text-white">Validate</a>
        <a asp-action="VarianceReport" class="btn btn-sm btn-primary">Variance Report</a>
        @* <a asp-action="OverAllProduct" class="btn btn-sm btn-primary">Product Info</a> *@
        
    </div>
</body>
</html>
<script>
    // Event listener for the "Validate" button
    document.getElementById('validateButton').addEventListener('click', function () {
        // Display SweetAlert confirmation dialog
        Swal.fire({
            title: 'Are you sure?',
            text: 'This action cannot be undone!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, validate!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/PhysicalStockTake/ReplaceData',  // Replace with your actual controller and action
                    type: 'POST',
                    dataType: 'json',
                    success: function (response) {
                        // if (response.success) {
                        //     Swal.fire('Done!', 'Data Saved Successfully.', 'success');
                        //     localStorage.setItem('dataSentSuccessfully', 'true');
                        //     window.location.href = '/PhysicalStockTake/CheckPhysicalStock';
                        // } else {
                        //     Swal.fire('Something Went Wrong', response.message, 'error');
                        // }
                        if (response.success) {
                            Swal.fire({
                                title: 'Done!',
                                text: 'Data Saved Successfully.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Store the flag in localStorage
                                    localStorage.setItem('dataSentSuccessfully', 'true');
            
                                    // Redirect to the new page
                                    window.location.href = '/PhysicalStockTake/CheckPhysicalStock';
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'Something Went Wrong',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }

                    },
                    error: function () {
                        Swal.fire('Error', 'An error occurred during validation.', 'error');
                    }
                });

            }
        });
    });
</script>
