@model eros.Models.Product_Master
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
<style>
    .small-heading {
        font-size: 1rem; /* Adjust the font size as needed */
    }

    label {
        font-size: small; /* You can also use specific values like 10px or 0.8em */
        font-weight: 700;
    }
</style>
@if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN" || role == "HOSITE" || role == "WAREHOUSE")
    {
        <div class="container">
            <div class="mt-3">
                <div class="card mb-3">
                    <div class="card-header bg-dark text-white">
                        <div class="d-flex align-items-baseline">
                            <h5 class="mx-auto font-weight-bolder small-heading">Product Master</h5>
                            <a asp-action="Index" class="btn btn-success text-white"><i class="fa fa-reply"></i> Back</a>
                        </div>
                    </div>
                    <div class="row row mx-lg-2 mx-md-2 mx-sm-2">
                        <div class="col-md-12">
                            <form asp-action="Create" onsubmit="return checkFieldsAndSubmit()" id="createForm">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="row">
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                                        <label asp-for="categorycode" class="control-label">category  Id</label>
                                        <input asp-for="categorycode" id="categorycode" readonly="true" class="form-control" />
                                        <span asp-validation-for="categorycode" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                                        <label for="categoryname" class="control-label">Category Name</label>
                                        <select class="form-control" asp-for="categoryname" id="categoryname" asp-items="@ViewBag.categoryname" onchange="changeCategory()">
                                        </select>
                                        <span asp-validation-for="categoryname" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                                        <label asp-for="subcategory" class="control-label"></label>
                                        <select asp-for="subcategory" id="subcategoryId" class="form-control" asp-items="@ViewBag.subcategory" onchange="dropdownChangedSubcategory()"></select>
                                        <span asp-validation-for="subcategory" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                                        <label asp-for="productcode" class="control-label"></label>
                                        <input asp-for="productcode" id="productcode" data-uppercase autocomplete="off" class="form-control" onchange="checkProductCode()" />
                                        <span asp-validation-for="productcode" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2" id="descriptionField">
                                        <label asp-for="productdescription" class="control-label"></label>
                                        <input asp-for="productdescription" id="productdescription" data-uppercase autocomplete="off" onchange="checkProductdesc()" class="form-control" />
                                        <span asp-validation-for="productdescription" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                                        <label asp-for="brand" class="control-label"></label>
                                        <input asp-for="brand" id="brand" data-uppercase autocomplete="off" class="form-control" />
                                        <span asp-validation-for="brand" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <input type="button" class="btn btn-success" value="Insert" hidden="hidden" id="btnInsert" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                                        <label asp-for="hsncode" class="control-label"></label>
                                        <input asp-for="hsncode" id="hsncode" data-uppercase autocomplete="off" class="form-control" />
                                        <span asp-validation-for="hsncode" class="text-danger"></span>
                                    </div>
                                    @* <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2">
                            <label asp-for="uom" class="control-label"></label>
                            <input asp-for="uom" data-uppercase autocomplete="off" class="form-control" />
                            <span asp-validation-for="uom" class="text-danger"></span>
                            </div> *@
                                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mt-2" id="cndiv">
                                        <label for="uom" class="control-label">UOM </label>
                                        <select class="form-control" asp-for="uom" id="uom" required asp-items="@ViewBag.uomnames">
                                        </select>
                                        <span asp-validation-for="uom" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row multipleblock " style="display:none;">
                                    <div class="col-sm-2">
                                        <label asp-for="TypeOfProduct" class="control-label">Type Of Product</label>
                                    </div>
                                    <div class="col-sm-3">
                                        <label>
                                            <input type="radio" id="rbIndividual" name="TypeOfProduct" value="Individual" /> Individual
                                        </label>
                                        <label>
                                            <input style="font-weight: 700;" type="radio" id="rbMultiple" name="TypeOfProduct" value="Multiple" /> Multiple
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group col-sm-12 mt-3">
                                    <div style="display:none;" id="_partialBOMId"></div>
                                    <div style="display:none;" id="_partialSCId"></div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        @* <input type="submit" onclick="submit()" value="Save" class="btn btn-success col-md-12" /> *@
                                        <input type="button" value="Submit" onclick="saveTableData()" class="btn btn-primary col-md-12" />

                                    </div>
                                    <div class="col-md-6">
                                        <a asp-action="Index" class="btn btn-danger col-md-12">Back</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    
@*     else if (role == "WAREHOUSE")
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
 *@    else
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    // function checkFieldsAndSubmit() {
    //     console.log("Check validation.....");
    //     var isValid = true;
    //     var fieldIds = ['#categorycode', '#categoryname', '#subcategoryId', '#productcode', '#productdescription', '#brand', '#hsncode', '#uom'];
    //     fieldIds.forEach(function (fieldId) {
    //         var value = $(fieldId).val();
    //         if (!value) {
    //             isValid = false;
    //             Swal.fire({
    //                 icon: 'error',
    //                 title: 'Oops...',
    //                 text: 'Please fill in all required fields.',
    //             });
    //             return false;
    //         }
    //     });
    //     if (!isValid) {
    //         return false; // Prevent form submission if any field is empty
    //     }
    //     var rowEmpty = false;
    //     return isValid; // Return true if all fields and table rows are filled, else false
    // }
    // function saveTableData() {
    //         event.preventDefault(); // Prevent default form submission
    //         var isValid = checkFieldsAndSubmit();
    //         if (!isValid) {
    //             return; // Stop submission if any field is empty
    //         } else {
    //         $("#createForm").submit();

    //         }
    // }

    function checkFieldsAndSubmit() {
        console.log("Check validation.....");
        var isValid = true;

        var categoryValue = $('#categoryname').val();
        var subcategoryValue = $('#subcategoryId').val();
        console.log(categoryValue + " , " + subcategoryValue);
        // Check if category or subcategory is not selected (empty or default value)
        if (categoryValue == "" || categoryValue == "----Select Category----") {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a Category.',
            });
            isValid = false;
            return false; // Stop form submission
        }

        if (subcategoryValue == "" || subcategoryValue == "--Select SubCategory--") {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a Subcategory.',
            });
            isValid = false;
            return false; // Stop form submission
        }

        // Proceed to check other fields if category and subcategory are selected
        var fieldIds = ['#categorycode', '#productcode', '#productdescription', '#brand', '#hsncode', '#uom'];
        fieldIds.forEach(function (fieldId) {
            var value = $(fieldId).val();
            if (!value) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Please fill in all required fields.',
                });
                isValid = false;
                return false; // Stop form submission if any field is empty
            }
        });

        return isValid; // Return true if all fields are filled
    }

    function saveTableData() {
        event.preventDefault(); // Prevent default form submission
        var isValid = checkFieldsAndSubmit();
        if (!isValid) {
            return; // Stop submission if validation fails
        } else {
            $("#createForm").submit(); // Submit the form if validation passes
        }
    }


    function checkProductCode() {
        var productcode = $('#productcode').val().trim().toUpperCase().replace(/\s+/g, ''); // Normalize input
        // Check if productcode contains single or double quotes
        if (productcode.includes("'") || productcode.includes('"')) {
            Swal.fire({
                title: 'Warning!',
                text: 'Product code cannot contain single or double quotes.',
                icon: 'warning',
                confirmButtonText: 'OK'
            }).then((result) => {
                $('#productcode').val('');
            });
            return; // Exit function
        }

        //console.log(productcode);
        $.ajax({
            url: '/Product_Master/ProductMasterCheck', // Correct URL path
            type: 'POST',
            data: { productcode: productcode.toUpperCase() },
            success: function (response) {
                if (response.success) {
                    console.log("Response: " + response.message);
                } else {
                    Swal.fire({
                        title: 'Warning!',
                        text: response.message,
                        icon: 'warning',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        $('#productcode').val('');
                    });
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                console.error("Error:", textStatus, errorThrown);
            }
        });
    }


    function checkProductdesc() {
        var description = $('#productdescription').val().trim().toUpperCase().replace(/\s+/g, ''); // Get the value of product description input field
        // Check if description contains single or double quotes
        if (description.includes("'") || description.includes('"')) {
            // Show error message to the user
            Swal.fire({
                title: 'Warning!',
                text: 'Description cannot contain single or double quotes.',
                icon: 'warning',
                confirmButtonText: 'OK'
            }).then((result) => {
                $('#productdescription').val('');
            });
            return; // Exit function
        }
        if (description !== '') {
            $.ajax({
                url: '/Product_Master/ProductMasterCheckdes', // Correct URL path
                type: 'POST',
                data: { description: description }, // Correct the variable name to match the controller action parameter
                success: function (response) {
                    if (response.success) {
                        console.log("Response: " + response.message);
                    } else {
                        Swal.fire({
                            title: 'Warning!',
                            text: response.message,
                            icon: 'warning',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            $('#productdescription').val('');
                        });
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error("Error:", textStatus, errorThrown);
                }
            });
        } else {
            // Handle case where description is empty
            console.log("Description is empty.");
        }
    }


    function submit() {
        console.log("submitt.....");
    }

    function changeCategory() {
        if (document.getElementById("categoryname").value != "") {
            var selectedValue = document.getElementById("categoryname").value;
                        
            var categoryCodeInput = $("#categorycode");
            $.ajax({
                url: '/Product_Master/GETCategory_CODE',
                type: 'GET',
                data: { selectedValue: selectedValue },
                success: function (data) {
                    categoryCodeInput.val(data);
                },
                error: function (xhr, status, error) {
                    console.log("An error occurred while executing the action: " + error);
                }
            });
            //END
            //for category and subcategory
            var studentSelect = $('#subcategoryId');
            $.ajax({
                url: '@Url.Action("ChangeCategory", "Product_Master")',
                type: 'GET',
                dataType: 'json',
                data: { selectedvalue: selectedValue },
                success: function (data) {
                    // Set the values in the textboxes
                    $('#subcategoryId').empty();
                    $('#subcategoryId').append($('<option>').text("--Select SubCategory--").val("--Select SubCategory--"));
                    $.each(data, function (index, item) {
                        $('#subcategoryId').append($('<option>').text(item.value).val(item.value));
                    });
                }
            });
        }
    }

    function dropdownChangedSubcategory() {
        var selectedOption = document.getElementById("subcategoryId").value;  //sub-category
        var selectedOption1 = document.getElementById("categoryname").value;      //category
        
        $.ajax({
            url: '/Product_Master/ActionName',
            type: 'POST',
            data: { optionValue: selectedOption, optionValue1: selectedOption1 },
            success: function (result) {
                console.log(result);
                console.log(result.data);
                console.log(data.categoryname);
            },
            error: function (xhr, status, error) {
                console.log("An error occurred while executing the action.");
            }
        });
    }


    //function GetProCode() {
    //    var productNameInput = $("#productdescription");
    //    var productCodeInput = $("#productcode");
    //    var productNameValue = productNameInput.val();
    //    console.log("Product Name: " + productNameValue);
    //    $.ajax({
    //        url: '@Url.Action("GETPROD_CODE", "Product_Master")',
    //        type: 'GET',
    //        dataType: 'json',
    //        data: { selectedvalue: productNameValue },
    //        success: function (data) {
    //            // Set the values in the textboxes
    //            productCodeInput.val(data);
    //        }
    //    });
    //}
    $('input[name="TypeOfProduct"]').on('change', function () {
        if ($(this).val() === 'Multiple') {
            var productCodeValue = $('#productcode').val().toUpperCase();
            $.ajax({
                url: '/product_master/LoadPartialSubComponents', // Replace with your endpoint for Sub Components
                type: 'GET',
                data: { productCodeValue: productCodeValue }, // Pass productCodeValue in the AJAX call
                success: function (data) {
                    $('#_partialBOMId').html(data); // Load returned partial view into the specified element
                    $('#_partialBOMId').show(); // Display the loaded content if it's hidden
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        } else {
            $('#_partialBOMId').hide();
            console.log("Else Loop");
        }
    });

    // $('input[name="TypeOfProduct"]').on('change', function () {
    //     if ($(this).val() === 'Multiple') {
    //         var productCodeValue = $('#productcode').val();
    //         $.ajax({
    //             url: '/product_master/LoadPartialSubComponents', // Replace with your endpoint for Sub Components
    //             type: 'GET',
    //             data: { productCodeValue: productCodeValue }, // Pass productCodeValue in the AJAX call
    //             success: function (data) {
    //                 $('#_partialBOMId').html(data); // Load returned partial view into the specified element
    //             },
    //             error: function (xhr, status, error) {
    //                 console.error('Error:', error);
    //             }
    //         });
    //     } else {
    //         console.log("Else Loop");
    //     }
    // });


</script>

