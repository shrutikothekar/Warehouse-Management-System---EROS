@model eros.Models.Product_Master

@{
    ViewData["Title"] = "_partialCategoryChair";
    Layout = null;
    string[] TableHeaders5 = new string[] {
                // "Check",
        "Sub-Component Code",
        "Sub-Component Name",
        "Sub-Component UOM",
        "Sub-Component Qty",
    };
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
@if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN" || role == "HOSITE"|| role == "WAREHOUSE")
    {
        <div class="card" id="templateCard">
            <div class="card-body">
                <table id="CodesTable" class="table table-bordered mt-1">
                    <thead>
                        <tr>
                            @foreach (var head in TableHeaders5)
                            {
                                <th>
                                    @head
                                </th>
                            }
                            <th>
                                <button id='btnAddDetailRow' type="button" class="btn btn-sm btn-secondary visible" onclick="AddItem1(this)">
                                    Add
                                </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="CsDiv">
                        @if (Model.Productmaster_Packets.Count == 0)
                        {
                            <tr>
                                <td colspan="5" style="color:red; font-weight:600;">No Subcomponent Data Found !</td>
                            </tr>
                        }
                        else
                        {
                            @for (int i = 0; i < Model.Productmaster_Packets.Count; i++)
                            {

                                <tr>
                                    <td>
                                        <input asp-for="@Model.Productmaster_Packets[i].subcomponentcode" id="sccode-@i" class="form-control" readonly />
                                        <span asp-validation-for="@Model.Productmaster_Packets[i].subcomponentcode" class="text-danger"></span>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.Productmaster_Packets[i].subcomponents" id="scname-@i" class="form-control" onchange="GetSComCode(@i)" />
                                        <span asp-validation-for="@Model.Productmaster_Packets[i].subcomponents" class="text-danger"></span>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.Productmaster_Packets[i].uom" id="scuom-@i" class="form-control" />
                                        <span asp-validation-for="@Model.Productmaster_Packets[i].uom" class="text-danger"></span>
                                    </td>
                                    <td>
                                        <input asp-for="@Model.Productmaster_Packets[i].qty" id="scqty-@i" class="form-control" />
                                        <span asp-validation-for="@Model.Productmaster_Packets[i].qty" class="text-danger"></span>
                                        <input type="hidden" asp-for="@Model.Productmaster_Packets[i].IsDeleted" />
                                    </td>
                                    <td>
                                        <button id='btnremove-@i' type="button" class="btn btn-sm btn-danger visible" onclick="DeleteItem(this)">Delete</button>
                                    </td>
                                </tr>
                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>

    }
    else
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}
<div style="display:none;">Product Code: @ViewBag.ProductCode</div>
<input style="display:none;" asp-for="productcode" id="productcode" data-uppercase autocomplete="off" class="form-control" readonly />



<script>

    // $(document).ready(function () {
    //     var productCodeValue = $('#productcode').val(); // Get the product code value
    //     var firstSccodeInput = $('#sccode-0'); // Assuming the first sccode input has ID 'sccode-0'
    //     if (firstSccodeInput.length > 0) {
    //         firstSccodeInput.val(productCodeValue);
    //     }
    // });
    
    function AddItem1(btn) {
        var table = document.getElementById('CodesTable');
        var rows = table.getElementsByTagName('tr');
        var rowOuterHtml = rows[rows.length - 1].outerHTML;

        // Create a temporary container to parse the HTML
        var container = document.createElement('div');
        container.innerHTML = rowOuterHtml;

        // Find all input elements within the container
        var inputElements = container.querySelectorAll('input');


        // Iterate through input elements and get their values
        var lastSccodeValue = ''; // Variable to store the last sccode value

        // Iterate through input elements and get the value of the last encountered sccode input
        inputElements.forEach(function (inputElement) {
            var id = inputElement.id;
            if (id.startsWith('sccode-')) {
                lastSccodeValue = inputElement.value; // Update the lastSccodeValue with the current sccode value
            }
        });
        console.log('Last sccode value:', lastSccodeValue);
        var parts = lastSccodeValue.split('-');
        var mainPart = parts[0]; // Store the part before the hyphen
        var subPart = parts[1]; // Store the part after the hyphen

        console.log('Main Part:', mainPart); // Output the part before the hyphen
        console.log('Sub Part:', subPart); // Output the part after the hyphen


        var lastrowIdx = rows.length - 2;
        var nextrowIdx = eval(lastrowIdx) + 1;

        console.log("lastrowIdx :" + lastrowIdx);
        console.log("nextrowIdx :" + nextrowIdx);

        // Replace placeholders in the HTML for the new row
        rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
        rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
        rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);

        // Append the updated row to the table
        var newRow = table.insertRow();
        newRow.innerHTML = rowOuterHtml;

        // Set the product code value to the new sccode input
        var newSccodeInput = $('#sccode-' + (rows.length - 2)); // Assuming the ID follows the pattern 'sccode-0', 'sccode-1', ...
        console.log("newSccodeInput : " + newSccodeInput);
        if (newSccodeInput.length > 0) {
            var productCodeValue = lastSccodeValue; // Assuming product code IDs follow a pattern 'productcode0', 'productcode1', ...

            // Extract main and sub parts from product code
            var parts = productCodeValue.split('-');
            var mainPart = parts[0];
            var subPart = parseInt(nextrowIdx);

            // Increment the subPart by 1
            subPart++;

            // Set the value of newSccodeInput as the combination of mainPart and incremented subPart
            newSccodeInput.val(mainPart + '-' + subPart);
            console.log(newSccodeInput.val()); // Check the new value set to the input
        }

       // console.log(rowOuterHtml);
        // Reset the new row's input values
        for (var cnt = 0; cnt < x.length; cnt++) {
            console.log("new :" + x[cnt].id);
            if (x[cnt].type == "text" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0) {
                x[cnt].value = '';

            }
            else if (x[cnt].type == "number" && x[cnt].id.indexOf('_' + nextrowIdx + '_') > 0)
                x[cnt].value = 0;
        }
        rebindvalidators();
    }

    alert(document.getElementById('productcode').value);

    // function GetSComCode(rowNumber) {
    //     var scname = $("#scname-" + rowNumber);
    //     var sccode = $("#sccode-" + rowNumber);
    //     var productNameValue = scname.val();
    //     console.log("sc Name: " + productNameValue);
    //     $.ajax({
    //         url: '@Url.Action("GETSubCom_CODE", "Product_Master")',
    //         type: 'GET',
    //         dataType: 'json',
    //         data: { selectedvalue: productNameValue },
    //         success: function (data) {
    //             // Set the values in the textboxes
    //             sccode.val(data);
    //         }
    //     });
    // }


</script>

<!-- Include jQuery (if not already included) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

