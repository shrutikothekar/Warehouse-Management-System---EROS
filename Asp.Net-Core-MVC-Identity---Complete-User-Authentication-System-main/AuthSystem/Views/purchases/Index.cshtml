@model IEnumerable<eros.Models.purchase>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
@if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN" || role == "HOSITE" || role == "WAREHOUSE")
    {
        <div class="container-fluid">
            <div class="mt-3">
                <div class="card mb-3">
                    <div class="card-header bg-dark text-white">
                        <div class="d-flex align-items-baseline">
                            <h5 class="mx-auto font-weight-bolder small-heading">Purchase Orders</h5>
                            <a asp-action="Create" class="btn btn-success text-white"><i class="fas fa-plus-square"></i> Add</a>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover table-sm" id="dataTable" width="100%" cellspacing="0">
                                <thead class="thead-light text-center">
                                    <tr class="small">
                                        <th>Sr.No.</th>
                                        @* <th>@Html.DisplayNameFor(model => model.id)</th> *@
                                        <th>
                                            @Html.DisplayNameFor(model => model.suppliername)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.pono)
                                        </th>
                                        
                                        <th>
                                            @Html.DisplayNameFor(model => model.gstinno)
                                        </th>
                                  @*       <th style="display:none">
                                            @Html.DisplayNameFor(model => model.contactno)
                                        </th> *@
                                        <th style="display:none">
                                            @Html.DisplayNameFor(model => model.address)
                                        </th>
                                        <th>
                                            Purchase Order Dt.
                                            @* @Html.DisplayNameFor(model => model.podate) *@
                                        </th>
                                        <th style="width:150px">Action</th>
                                    </tr>
                                </thead>
                                <tbody class=" text-center">
                                    @{
                                        int counter = 1;
                                    }
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @* @Html.DisplayFor(modelItem => item.id) *@
                                                @counter
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.suppliername)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.pono)
                                            </td>
                                            
                                            <td>
                                                @Html.DisplayFor(modelItem => item.gstinno)
                                            </td>
                                       @*      <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.contactno)
                                            </td> *@
                                            <td style="display:none">
                                                @Html.DisplayFor(modelItem => item.address)
                                            </td>
                                            <td>
                                                @DateTime.ParseExact(item.podate, "yyyy-MM-dd", null).ToString("dd-MM-yyyy")
                                                @* @Html.DisplayFor(modelItem => item.podate) *@
                                            </td>
                                            <td style="width:150px">
                                                <a asp-action="Edit" id="editButton" asp-route-id="@item.id" class="btn btn-success ">
                                                    <i class="fas fa-pencil-alt"></i>
                                                </a>
                                                <a asp-action="Details" asp-route-id="@item.id" class="btn bg-warning">
                                                    <i style="color:white" class="fa fa-eye" aria-hidden="true"></i>
                                                </a>
                                               @*  <a asp-action="Delete" asp-route-id="@item.id" class="btn btn-danger">
                                                    <i class="fas fa-trash-alt"></i>
                                                </a> *@
                                                @* <a asp-action="Edit" asp-route-id="@item.id">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.id">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.id">Delete</a> *@
                                            </td>
                                        </tr>
                                        counter++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
@*     else if (role == "WAREHOUSE")
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
 *@    
 else
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}

<style>
    label {
        font-size: small; /* You can also use specific values like 10px or 0.8em */
        font-weight: 700;
    }

    .small-heading {
        font-size: 1rem; /* Adjust the font size as needed */
    }
</style>

@*  @if (TempData["ToastrMessage"] != null && TempData["ToastrType"] != null)
 {
     <script>
         

         var messageType = "@TempData["ToastrType"]";
         var messageText = "@TempData["ToastrMessage"]";

        Swal.fire({
            icon: 'warning',
            title: 'Warning',
            text: messageText,
        });
     </script>
 } *@

<script>
    // $('#editButton').click(function () {
    //     var id = $(this).attr('asp-route-id'); // Use attr('asp-route-id') to retrieve the ID
    //     $.ajax({
    //         url: '/purchases/CheckInwardDone',
    //         type: 'GET',
    //         data: { id: id },
    //         success: function (result) {
    //             if (result.success) {
    //                 console.log("result :" + result);
    //             } else {
    //                 Swal.fire({
    //                     icon: 'warning',
    //                     title: 'Warning',
    //                     text: 'You cannot update the purchase order, already inward done!',
    //                 });
    //             }
    //             console.log(result);
    //         },
    //         error: function (xhr, status, error) {
    //             console.error(xhr.responseText);
    //         }
    //     });
    // });

        // $(function () {
        //     $('#dataTable').DataTable({
        //         //"order": [[0, "desc"]] // Order by the first column (id) in descending order
        //          //"ordering": false
        //        ordering: false
        //     });
        // });
</script>