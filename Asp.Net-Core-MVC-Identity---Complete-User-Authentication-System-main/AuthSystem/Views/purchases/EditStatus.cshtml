@model eros.Models.purchase

@{
    ViewData["Title"] = "EditStatus";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string[] TableHeaders = new string[] {
        // "Product Code",
        // "Product Name",
        // // "Description",
        // "Warranty" ,
        // "Qty" ,
        // "UOM" ,
        // "Template",

        "Product Code",
        "Product Name",
        "Brand" ,
        "Qty" ,
        "UOM" ,
         };
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
@if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN" || role == "HOSITE")
    {
        <main class="page payment-page">
            <section class="payment-form mt-4 ">
                <div class="card">
                    @* onsubmit="return validateStatusSelection()" *@
                    <form asp-action="EditStatus" id="form">
                        <div class="card-header text-white bg-dark p-1">
                            <div class="d-flex align-items-baseline">
                                <a href="/purchases/PurchasePendingList" class="btn btn-link text-white"><i class="fa fa-arrow-left"></i></a>
                                <h5 class="mx-auto text-white text-2xl font-semibold small-heading">Update Purchase Order Entry Status</h5>
                            </div>
                        </div>
                        <div class="row p-2">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group col-sm-6 mt-3">
                                <input type="hidden" asp-for="id" />
                                <label asp-for="suppliername" class="control-label"></label>
                                <input asp-for="suppliername" readonly data-uppercase autocomplete="off" class="form-control" oninput="validateAlphabet(this)" />
                                <span asp-validation-for="suppliername" class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-6 mt-3">
                                <label asp-for="pono" class="control-label"></label>
                                <input asp-for="pono" readonly data-uppercase autocomplete="off" class="form-control" oninput="validateAlphNum(this)" />
                                <span asp-validation-for="pono" class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-6 mt-3">
                                <label asp-for="podate" class="control-label"></label>
                                <input asp-for="podate" readonly data-uppercase autocomplete="off" type="date" class="form-control" />
                                <span asp-validation-for="podate" class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-6 mt-3" style="display:none;">
                                <label asp-for="gstinno" class="control-label"></label>
                                <input asp-for="gstinno" readonly data-uppercase autocomplete="off" class="form-control" oninput="validateAlphNum(this)" />
                                <span asp-validation-for="gstinno" class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-6 mt-3">
                                <label asp-for="contactno" class="control-label"></label>
                                <input asp-for="contactno" readonly data-uppercase autocomplete="off" class="form-control" oninput="validateNumber(this)" />
                                <span asp-validation-for="contactno" class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-6 mt-3">
                                <label asp-for="address" class="control-label"></label>
                                <input asp-for="address" readonly data-uppercase autocomplete="off" class="form-control" oninput="validateAlphNum(this)" />
                                <span asp-validation-for="address" class="text-danger"></span>
                            </div>
                            <div class="form-group col-sm-6 mt-3">
                                <label asp-for="status" class="control-label">Update Status</label>
                                <select asp-for="status" readonly id="SelectVenderId1" class="form-control" asp-items="@ViewBag.GetStatus">
                                   @*  <option value=""></option>
                                    <option style="display:none" value="Pending">Pending</option>
                                    <option value="Return">Return</option>
                                    <option value="Cancel">Cancel</option>
                                    <option value="On Hold">On Hold</option>
                                    <option value="Pending">Pending</option> *@
                                </select>
                                <span asp-validation-for="status" class="text-danger"></span>
                            </div>

                            @* <div class="form-group col-sm-6 mt-3">
                    <label asp-for="status"  class="control-label">Update Status</label>
                    <select asp-for="status" readonly id="SelectVenderId1" class="form-control">
                    <option value=""></option>
                    <option style="display:none" value="Pending">Pending</option>
                    <option value="Cancel">Return</option>
                    <option value="Delete">Cancel</option>
                    <option value="On Hold">On Hold</option>
                    </select>
                    <span asp-validation-for="status" class="text-danger"></span>
                    </div> *@
                        </div>
                        <div class="table" style="display:none">
                            <table id="CodesTable" class="table table-striped table-sm ">
                                <thead class="bg-gray-200 sticky top-0">
                                    <tr>
                                        @foreach (var head in TableHeaders)
                                        {
                                            <th>
                                                @head
                                            </th>
                                        }
                                        =
                                    </tr>
                                </thead>
                                <tbody id="CsDiv">
                                    @for (int i = 0; i < Model.poProduct_details.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                <input asp-for="@Model.poProduct_details[i].productcode" class="form-control" oninput="validateAlphNum(this)" />
                                            </td>
                                            @*   <td style="display:none;">
                                <input asp-for="@Model.poProduct_details[i].productname" class="form-control" />
                                </td> *@
                                            <td>
                                                <input asp-for="@Model.poProduct_details[i].description" class="form-control" oninput="validateAlphNum(this)">
                                            </td>
                                            <td>
                                                <input asp-for="@Model.poProduct_details[i].brand" class="form-control" oninput="validateAlphabet(this)" />
                                            </td>
                                            <td>
                                                <input asp-for="@Model.poProduct_details[i].quantity" class="form-control" oninput="validateNumber(this)" />
                                            </td>
                                            @*   <td>
                                <input asp-for="@Model.poProduct_details[i].Warranty" class="form-control" />
                                </td> *@
                                            <td>
                                                <input asp-for="@Model.poProduct_details[i].uom" class="form-control" oninput="validateAlphabet(this)" />
                                            </td>


                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <input type="hidden" id="hdnLastIndex" value="0" />
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-12">
                                @* <div class="form-group col-sm-12 mt-2">
                        <input type="submit" value="Change Status" class="btn btn-success col-sm-12" />
                        </div> *@
                                <div class="form-group col-sm-12 mt-2">
                                    @* <input type="submit" value="Change Status" class="btn btn-success col-sm-12" /> *@
                                    <input type="submit" value="Change Status" onclick="return ConfirmStatus(this)" class="btn btn-success col-sm-12" />

                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </section>
        </main>

    }
    else if (role == "WAREHOUSE")
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
    else
    {
        <div class="container">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}

<style>
    label {
        font-size: small; /* You can also use specific values like 10px or 0.8em */
        font-weight: 700;
    }

    .small-heading {
        font-size: 1rem; /* Adjust the font size as needed */
    }
</style>
@* <div class="container"> *@
@* </div> *@
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('#form').submit(function (event) {
                // Prevent default form submission
                event.preventDefault();

                //condition for emprth field
                if (!$('#SelectVenderId1').val()) {
                    Swal.fire({
                        title: "Warning",
                        text: "Please select a status to change !",
                        icon: "warning",
                        confirmButtonText: "OK"
                    });
                    return;
                }

                // Call SubmitForm function
                SubmitForm();
            });
        });

        // Function to handle form submission
        function SubmitForm() {
            // alert("Called");
            // Serialize form data
            var formData = $('#form').serialize();
            $.ajax({
                type: 'POST',
                url: '/purchases/EditStatus', // Update the URL with your controller action URL
                data: formData,
                success: function (response) {
                    if (response.success) {
                        console.log("Success !");
                        // Success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: response.message
                        }).then((result) => {
                            window.location.href = '/purchases/PurchasePendingList'; // Update the URL
                        });
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Warning',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    console.log(error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while processing your request.'
                    });
                }
            });
            return false;
        }


        // function validateStatusSelection() {
        //     var selectedStatus = $('#SelectVenderId1').val(); // Assuming 'SelectVenderId1' is the ID of your status select element
        //     if (!selectedStatus) {
        //         Swal.fire({
        //             title: "Warning",
        //             text: "Please select a status before proceeding.",
        //             icon: "warning",
        //             confirmButtonText: "OK"
        //         });
        //         return false; // Prevent form submission
        //     }
        //     return true;
        // }
        $('#SelectVenderId1').change(function () {
            var selectedOption = $(this).val();
            if (selectedOption == 'Return') {
                Swal.fire({
                    title: "Are you sure you want to change the Status ?",
                    text: "Do you want to Purchase return ?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        var ponoValue = $('#pono').val();
                        console.log("ponoValue: " + ponoValue);
                        $.ajax({
                            url: '/purchases/ponoLoaded',
                            type: 'POST',
                            data: { pono: ponoValue },
                            success: function (response) {
                                if (response.success) {
                                    console.log("Status changed successfully!");
                                } else {
                                    Swal.fire({
                                        title: "Warning",
                                        text: response.message,
                                        icon: "warning",
                                        confirmButtonText: "OK"
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            $('#SelectVenderId1').val('');
                                        }
                                    });
                                }
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                Swal.fire({
                                    title: "Error",
                                    text: "An error occurred while changing status!",
                                    icon: "error",
                                    confirmButtonText: "OK"
                                }).then((result) => {
                                    $('#SelectVenderId1').val('');
                                });
                            }
                        });
                    } else {
                        Swal.fire({
                            title: "Warning",
                            text: "Status not changed!",
                            icon: "warning",
                            confirmButtonText: "OK"
                        }).then((result) => {
                            $('#SelectVenderId1').val('');
                        });
                    }
                });
            }
            else if (selectedOption == 'On Hold') {
                console.log("Status On Hold Update!");
                Swal.fire({
                    title: "Are you sure you want to change the Status ?",
                    text: "Do you want to hold the order ?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes",
                    cancelButtonText: "Cancel",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        var ponoValue = $('#pono').val();
                        console.log("ponoValue: " + ponoValue);
                        $.ajax({
                            url: '/purchases/ponoLoadedOnHold',
                            type: 'POST',
                            data: { pono: ponoValue },
                            success: function (response) {
                                if (response.success) {
                                    console.log("Status changed successfully!");
                                } else {
                                    Swal.fire({
                                        title: "Warning",
                                        text: response.message,
                                        icon: "warning",
                                        confirmButtonText: "OK"
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            $('#SelectVenderId1').val('');
                                        }
                                    });
                                }
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                Swal.fire({
                                    title: "Error",
                                    text: "An error occurred while changing status!",
                                    icon: "error",
                                    confirmButtonText: "OK"
                                }).then((result) => {
                                    $('#SelectVenderId1').val('');
                                });
                            }
                        });
                    }
                });
            }
            else if (selectedOption == 'Cancel') {
                console.log("Status On Cancel Update!");
                Swal.fire({
                    title: "Are you sure you want to change the Status ?",
                    text: "Do you want to Cancel the order ?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes",
                    cancelButtonText: "Cancel",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        var ponoValue = $('#pono').val();
                        console.log("ponoValue: " + ponoValue);
                        $.ajax({
                            url: '/purchases/OnDeleteChange',
                            type: 'POST',
                            data: { pono: ponoValue },
                            success: function (response) {
                                if (response.success) {
                                    console.log("Status changed successfully!");
                                } else {
                                    Swal.fire({
                                        title: "Warning",
                                        text: response.message,
                                        icon: "warning",
                                        confirmButtonText: "OK"
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            $('#SelectVenderId1').val('');
                                        }
                                    });
                                }
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                Swal.fire({
                                    title: "Error",
                                    text: "An error occurred while changing status!",
                                    icon: "error",
                                    confirmButtonText: "OK"
                                }).then((result) => {
                                    $('#SelectVenderId1').val('');
                                });
                            }
                        });
                    }
                });
            }
            else if (selectedOption == 'Pending') {
                console.log("Status On Pending Update!");
                Swal.fire({
                    title: "Are you sure you want to change the Status ?",
                    text: "Do you want to pending the order ?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes",
                    cancelButtonText: "Cancel",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        var ponoValue = $('#pono').val();
                        console.log("ponoValue: " + ponoValue);
                        $.ajax({
                            url: '/purchases/OnPendingChange',
                            type: 'POST',
                            data: { pono: ponoValue },
                            success: function (response) {
                                if (response.success) {
                                    console.log("Status changed successfully!");
                                } else {
                                    Swal.fire({
                                        title: "Warning",
                                        text: response.message,
                                        icon: "warning",
                                        confirmButtonText: "OK"
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            $('#SelectVenderId1').val('');
                                        }
                                    });
                                }
                            },
                            error: function (xhr, textStatus, errorThrown) {
                                Swal.fire({
                                    title: "Error",
                                    text: "An error occurred while changing status!",
                                    icon: "error",
                                    confirmButtonText: "OK"
                                }).then((result) => {
                                    $('#SelectVenderId1').val('');
                                });
                            }
                        });
                    }
                });
            }
        });

        // $('#SelectVenderId1').change(function () {
        //     var selectedOption = $(this).val();
        //     if (selectedOption == 'Cancel') {
        //         Swal.fire({
        //             title: "Are you sure you want to Return the status?",
        //             text: "Do you want to change the status as Return?",
        //             icon: "warning",
        //             showCancelButton: true,
        //             confirmButtonText: "Yes",
        //             cancelButtonText: "Return",
        //             reverseButtons: true
        //         }).then((result) => {
        //             if (result.isConfirmed) {
        //                 var ponoValue = $('#pono').val();
        //                 console.log("ponoValue: " + ponoValue);
        //                 $.ajax({
        //                     url: '/purchases/ponoLoaded',
        //                     type: 'POST',
        //                     data: { pono: ponoValue },
        //                     success: function (response) {
        //                         if (response.success) {
        //                             console.log("Status cancelled successfully!");
        //                         } else {
        //                             Swal.fire({
        //                                 title: "Warning",
        //                                 text: response.message,
        //                                 icon: "warning",
        //                                 confirmButtonText: "OK"
        //                             }).then((result) => {
        //                                 if (result.isConfirmed) {
        //                                     $('#SelectVenderId1').val('');
        //                                 }
        //                             });
        //                         }
        //                     },
        //                     error: function (xhr, textStatus, errorThrown) {
        //                         Swal.fire({
        //                             title: "Error",
        //                             text: "An error occurred while changing status!",
        //                             icon: "error",
        //                             confirmButtonText: "OK"
        //                         }).then((result) => {
        //                             $('#SelectVenderId1').val('');
        //                         });
        //                     }
        //                 });
        //             } else {
        //                 Swal.fire({
        //                     title: "Warning",
        //                     text: "Status not changed!",
        //                     icon: "warning",
        //                     confirmButtonText: "OK"
        //                 }).then((result) => {
        //                     $('#SelectVenderId1').val('');
        //                 });
        //             }
        //         });
        //     } else if (selectedOption == 'On Hold') {
        //         console.log("Status On Hold Update!");
        //         var ponoValue = $('#pono').val();
        //         console.log("ponoValue: " + ponoValue);
        //         $.ajax({
        //             url: '/purchases/ponoLoadedOnHold',
        //             type: 'POST',
        //             data: { pono: ponoValue },
        //             success: function (response) {
        //                 if (response.success) {
        //                     console.log("Status cancelled successfully!");
        //                 } else {
        //                     Swal.fire({
        //                         title: "Warning",
        //                         text: response.message,
        //                         icon: "warning",
        //                         confirmButtonText: "OK"
        //                     }).then((result) => {
        //                         if (result.isConfirmed) {
        //                             $('#SelectVenderId1').val('');
        //                         }
        //                     });
        //                 }
        //             },
        //             error: function (xhr, textStatus, errorThrown) {
        //                 Swal.fire({
        //                     title: "Error",
        //                     text: "An error occurred while changing status!",
        //                     icon: "error",
        //                     confirmButtonText: "OK"
        //                 }).then((result) => {
        //                     $('#SelectVenderId1').val('');
        //                 });
        //             }
        //         });
        //     }
        // });

        function validateAlphabet(input) {
            var regex = /^[a-zA-Z\s._-\s]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
        function validateAlphNum(input) {
            var regex = /^[a-zA-Z0-9]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
        function validateNumber(input) {
            var regex = /^[0-9]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
        function validatePinNumber(input) {
            var regex = /^[0-5]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
    </script>
}

