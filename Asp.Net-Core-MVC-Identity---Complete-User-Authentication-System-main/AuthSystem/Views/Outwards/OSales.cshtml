@model eros.Models.inward

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string[] TableHeaders = new string[] {
        // "Prd. Code",
        // "Prd. Name.",
        // "Qty",
        // "UOM",
        // // "No. of set/product" ,
        // // "No. of Qty/Shipper" ,
        // // "No of Shipper/Qty" ,
        // // "Total Shippers" ,
        //  "Total Subassembly",

        "Prd. Code",
        "Prd. Name.",
        "Br",
        "Qty",
        "No. set/pro." ,
        "No. Qty/shp" ,
        "No. shp/Qty" ,
        "Ttl shp" ,
        "Ttl sub",
        "SC",
      };
    string role = Context.Request.HttpContext.Session.GetString("Role");
    var jsonData = Context.Request.HttpContext.Session.GetString("MenuMaster");
}
@* @if (!string.IsNullOrEmpty(role))
{
    @if (role == "ADMIN" || role == "WAREHOUSE")
    {

    }
    else if (role == "HOSITE")
    {
        <div class="container-field">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }

    else
    {
        <div class="container-field">
            <div class="alert alert-danger alert-dismissible fade show">
                <h6 class="alert-heading">
                    <i class="bi-exclamation-octagon-fill"></i>
                    No Access !!
                </h6>
                <p>
                    You do not have access to this page. Please contact your administrator for assistance.
                </p>
                <hr>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    }
}
 *@
<style>
    input[type="radio"]:checked + label {
        background-color: darkgrEy; /* Change this to the desired background color */
        color: #fff; /* Change this to the desired text color */
    }

    label {
        font-size: small; /* You can also use specific values like 10px or 0.8em */
        font-weight: 700;
    }

    .small-heading {
        font-size: 1rem; /* Adjust the font size as needed */
    }
</style>
<div class="container-field">
    <div class="mt-3">
        <div class="card mb-3">
            <div class="card-header bg-dark text-white">
                <div class="d-flex align-items-baseline">
                    <h5 class="mx-auto font-weight-bolder small-heading">Outward Entry</h5>
                    <a asp-action="Index" class="btn btn-success text-white"><i class="fa fa-reply"></i> Back</a>
                </div>
            </div>
            <main class="page payment-page">
                <section class="payment-form">
                    <div class="p-2">
                        <div class="card-details">
                            <form method="post" class="bg-secondary mt-2 mx-2" action="radio" id="form10" onkeydown="return event.key != 'Enter';">
                                &nbsp;&nbsp;
                                <input type="radio" style="height:18px; width:18px; vertical-align: middle;" class="btn-check" name="nav" id="nav-Demo-tab" autocomplete="off" value="Demo">
                                <label class="btn text-white" style="width:180px;" for="nav-Demo-tab">Demo</label>

                                <input type="radio" style="height:18px; width:18px; vertical-align: middle;" class="btn-check" name="nav" id="nav-Repair-tab" autocomplete="off" value="Repair">
                                <label class="btn text-white" style="width:180px;" for="nav-Repair-tab">Repair</label>

                                <input type="radio" style="height:18px; width:18px; vertical-align: middle;" class="btn-check" name="nav" id="nav-Replacement-tab" autocomplete="off" value="Replacement">
                                <label class="btn text-white" style="width:180px;" for="nav-Replacement-tab">Replacement</label>

                                <input type="radio" style="height:18px; width:18px; vertical-align: middle;" class="btn-check" name="nav" id="nav-Purchasereturn-tab" autocomplete="off" value="Purchase Return">
                                <label class="btn text-white" style="width:180px;" for="nav-Purchasereturn-tab">Purchase Return</label>
                            </form>
                            <br />
                            <form asp-action="Create" id="form4">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="row mx-lg-2 mx-md-2">
                                    @* vendername, sono *@
                                    <div class="form-group" style="display:none">
                                        <label asp-for="vendername" class="control-label">Type of Vendor</label>
                                        <select asp-for="vendername" id="SelectcustomerId" class="form-control" onchange="changewbcustomer()">
                                            <option value="Customer" selected>Customer</option>
                                        </select>
                                        <span asp-validation-for="vendername" class="text-danger"></span>
                                    </div>
      
                                    <div class="form-group col-sm-3 mt-2" id="selectsonoId">
                                        <label asp-for="sono" class="control-label">Sale Order No.</label>
                                        <select asp-for="sono" style="width:400px" id="sonoId" class="form-control" asp-items="@ViewBag.sono" onchange="dropdownChangedsono() "></select>
                                        <span asp-validation-for="sono" class="text-danger"></span>
                                    </div>
                                </div>
                                <div id="output1"></div> @* table details *@
                                <input asp-for="ordertype" id="ordertypeId5" class="form-control" hidden />@* ordertype *@
                                <div class="row mx-lg-2 mx-md-2">
                                    <div class="form-group col-sm-3 mt-2">
                                        <label asp-for="dcno" class="control-label"></label>
                                        <input asp-for="dcno" id="dreferenceno" data-uppercase autocomplete="off" class="form-control" oninput="validateNumber(this)" />
                                        <span asp-validation-for="dcno" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-sm-3 mt-2">
                                        <label id="dcdateLabel" asp-for="dcdate" class="control-label"></label>
                                        <input asp-for="dcdate" type="date" data-uppercase autocomplete="off" type="date" class="form-control" />
                                        <span asp-validation-for="dcdate" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-sm-3 mt-2">
                                        <label asp-for="invoiceno" class="control-label"></label>
                                        <input asp-for="invoiceno" id="dinvoiceno" data-uppercase autocomplete="off" class="form-control" oninput="validateNumber(this)" />
                                        <span asp-validation-for="invoiceno" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-sm-3 mt-2">
                                        <label id="invoicedateLabel" asp-for="invoicedate" class="control-label"></label>
                                        <input asp-for="invoicedate" type="date" data-uppercase autocomplete="off" type="date" class="form-control" />
                                        <span asp-validation-for="invoicedate" class="text-danger"></span>
                                    </div>
                                </div>
                                <input type="hidden" id="hdnLastIndex" value="0" />
                                <div class="row mx-lg-2 mx-md-2">
                                    @* grnno, grndate *@

                                    <div class="form-group col-sm-6 mt-2">
                                        <label asp-for="grnno" class="control-label"></label>
                                        <input asp-for="grnno" readonly id="sgrnno" data-uppercase autocomplete="off" class="form-control" readonly oninput="validateNumber(this)" />
                                        <span asp-validation-for="grnno" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-sm-6 mt-2">
                                        <label asp-for="grndate" class="control-label">GRN Date</label>
                                        <input type="date" asp-for="grndate" data-uppercase autocomplete="off" type="date" class="form-control" />
                                        <span asp-validation-for="grndate" class="text-danger"></span>
                                    </div>
                                </div>
                                <input type="hidden" id="hdnLastIndex" value="0" />

                                <div class="row mx-lg-2 mx-md-2">
                                    @* batchcode, remark *@
                                    <div class="form-group col-sm-6 mt-2">
                                        <label asp-for="batchcode" class="control-label"></label>
                                        <input asp-for="batchcode" data-uppercase autocomplete="off" class="form-control" required  />
                                        <span asp-validation-for="batchcode" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-sm-6 mt-2">
                                        <label asp-for="remarks" class="control-label"></label>
                                        <input asp-for="remarks" data-uppercase autocomplete="off" class="form-control" oninput="validateAlphabet(this) />
                                        <span asp-validation-for="remarks" class="text-danger"></span>
                                    </div>
                                </div>

                                <div class="row mx-lg-2 mx-md-2" style="display:none;">
                                    <div class="form-group col-sm-6 mt-2 ">
                                        <label asp-for="date" class="control-label">Date</label>
                                        <input type="date" data-uppercase autocomplete="off" id="datepicker" asp-for="date" class="form-control" />
                                        <span asp-validation-for="date" class="text-danger"></span>
                                    </div>
                                    <div class="form-group col-sm-6 mt-2">
                                        <label asp-for="time" class="control-label">Time</label>
                                        <input type="time" data-uppercase autocomplete="off" id="timepicker" asp-for="time" class="form-control" />
                                        <span asp-validation-for="time" class="text-danger"></span>
                                    </div>
                                </div>
                                <input asp-for="printflag" hidden id="stickerDecision" name="stickerDecision" value="" />
                                <br/>
                                <div class="row mx-lg-2 mx-md-2">
                                    <div class="col-md-12">
                                        <input type="submit" id="submitButton" onclick="return generateSticker(this);" class="btn btn-primary btn-sm col-md-12" />
                                    </div>
                                    <div class="col-md-6" style="display:none">
                                        <a asp-action="Index" class="btn btn-danger col-md-12">Back</a>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </section>
            </main>
        </div>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function validateAlphabet(input) {
            var regex = /^[a-zA-Z\s._-\s]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }

        function validateAlphNum(input) {
            var regex = /^[a-zA-Z0-9]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
        function validateNumber(input) {
            var regex = /^[0-9]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
        function validatePinNumber(input) {
            var regex = /^[0-5]+$/;
            var value = input.value;

            if (!regex.test(value)) {
                input.value = value.slice(0, -1);
            }
        }
    </script>
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>



<script>
    // var object = { status: false, ele: null };

    // function generateSticker(ev) {
    //     if (object.status) { return true; };
    //     // //FOR QUANTITY IS O
    //     // var quantityInputs = document.querySelectorAll('.quantity-input');
    //     // var isValid = true;
    //     // quantityInputs.forEach(function (input) {
    //     //     var enteredQuantity = parseFloat(input.value);
    //     //     // alert("enteredQuantity : " + enteredQuantity);
    //     //     if (enteredQuantity === 0) {
    //     //         isValid = false;
    //     //         Swal.fire({
    //     //             icon: 'error',
    //     //             title: 'Invalid Quantity',
    //     //             text: 'Please enter a valid quantity greater than 0 !',
    //     //         });
    //     //     }
    //     // });
    //     // if (!isValid) {
    //     //     // If quantity is invalid, prevent form submission
    //     //     // return false;
    //     //     return true;
    //     // }
    //     //warning
    //     Swal.fire({
    //         title: "Warning",
    //         text: "Do you want to generate a sticker?",
    //         icon: "warning",
    //         showCancelButton: true,
    //         confirmButtonText: 'Yes',
    //         cancelButtonText: 'No, Save Changes',
    //         customClass: {
    //             confirmButton: 'btn btn-success',
    //             cancelButton: 'btn btn-warning'
    //         }
    //     }).then((result) => {
    //         if (result.isConfirmed) {
    //             const stickerDecisionInput = document.getElementById('stickerDecision');
    //             // alert(document.getElementById('stickerDecision').value = 1);
    //             document.getElementById('stickerDecision').value = 1;
    //             object.status = true;
    //             object.ele = ev;
    //             object.ele.click();
    //             // document.getElementById('form1').submit(); // Submit the form with the set value
    //         } else if (result.dismiss === Swal.DismissReason.cancel) {
    //             const stickerDecisionInput = document.getElementById('stickerDecision');
    //             // alert(document.getElementById('stickerDecision').value = 2);
    //             document.getElementById('stickerDecision').value = 2;
    //             object.status = true;
    //             object.ele = ev;
    //             object.ele.click();
    //             // document.getElementById('form1').submit();
    //         }
    //     });
    //     return false;
    //     // return true;
    // };


    // var object = { status: false, ele: null };
    // function generateSticker(ev) {
    //     if (object.status) { return true; };
    //     //FOR QUANTITY IS O
    //     var quantityInputs = document.querySelectorAll('.quantity-input');
    //     var isValid = true;
    //     quantityInputs.forEach(function (input) {
    //         var enteredQuantity = parseFloat(input.value);
    //         // alert("enteredQuantity : " + enteredQuantity);
    //         if (enteredQuantity === 0) {
    //             isValid = false;
    //             Swal.fire({
    //                 icon: 'error',
    //                 title: 'Invalid Quantity',
    //                 text: 'Please enter a valid quantity greater than 0 !',
    //             });
    //         }
    //     });
    //     if (!isValid) {
    //         // If quantity is invalid, prevent form submission
    //         return false;
    //     }
    //     //FOR GENRATE STICKER
    //     Swal.fire({
    //         title: "Warning",
    //         text: "Do you want to generate a sticker?",
    //         icon: "warning",
    //         showCancelButton: true,
    //         confirmButtonText: 'Yes',
    //         cancelButtonText: 'No, Save Changes',
    //         customClass: {
    //             confirmButton: 'btn btn-success',
    //             cancelButton: 'btn btn-warning'
    //         }
    //     }).then((result) => {
    //         if (result.isConfirmed) {
    //             const stickerDecisionInput = document.getElementById('stickerDecision');
    //             // alert(document.getElementById('stickerDecision').value = 1);
    //             document.getElementById('stickerDecision').value = 1;
    //             object.status = true;
    //             object.ele = ev;
    //             object.ele.click();
    //             // document.getElementById('form1').submit(); // Submit the form with the set value
    //         } else if (result.dismiss === Swal.DismissReason.cancel) {
    //             const stickerDecisionInput = document.getElementById('stickerDecision');
    //             // alert(document.getElementById('stickerDecision').value = 2);
    //             document.getElementById('stickerDecision').value = 2;
    //             object.status = true;
    //             object.ele = ev;
    //             object.ele.click();
    //             // document.getElementById('form1').submit();
    //         }
    //     });

    //     // return false;
    //     return true;
    // };

    var object = { status: false, ele: null };

    function generateSticker(ev) {
        if (object.status) { return true; };
        Swal.fire({
            title: "Warning",
            text: "Do you want to generate a sticker?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: 'Shipper Wise',
            cancelButtonText: 'Subcomponent Wise',
            showCloseButton: false, // Hide the close button
            showDenyButton: true, // Show the "No Sticker" button
            denyButtonText: 'No Sticker', // Text for the "No Sticker" button
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-warning',
                denyButton: 'btn btn-info' // Style for the "No Sticker" button
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const stickerDecisionInput = document.getElementById('stickerDecision');
                document.getElementById('stickerDecision').value = 1;
                object.status = true;
                object.ele = ev;
                object.ele.click();
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                const stickerDecisionInput = document.getElementById('stickerDecision');
                document.getElementById('stickerDecision').value = 2;
                object.status = true;
                object.ele = ev;
                object.ele.click();
            } else if (result.isDenied) {
                const stickerDecisionInput = document.getElementById('stickerDecision');
                document.getElementById('stickerDecision').value = 3; // Set value for "No Sticker"
                object.status = true;
                object.ele = ev;
                object.ele.click();
            }
        });
        return false;
    }


    $(document).ready(function () {
        // Listen for change event on radio buttons
        $('input[name="nav"]').change(function () {
            // Submit the form when a radio button is changed
            $('#form10').submit();
        });

        function generateGRNNo() {
            $.ajax({
                url: '/inwards/GETGRNSR_CODE', // Replace with your actual API endpoint URL for generating GRN number
                type: 'GET',
                success: function (response) {
                    // Populate the input field with the generated GRN number
                    $('#sgrnno').val(response);
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }

        generateGRNNo();
    })

    //for sales
    function changewbcustomer() {
        if (document.getElementById("SelectcustomerId").value != "") {
            console.log("Customer id select");
            var selectedValue = document.getElementById("SelectcustomerId").value;
            console.log(selectedValue);
            var studentSelect = $('#sonoId');
            $.ajax({
                url: '@Url.Action("Changesono", "Outwards")',
                type: 'GET',
                dataType: 'json',
                data: { selectedvalue: selectedValue },
                success: function (data) {
                    // Set the values in the textboxes
                    console.log(data);

                    $('#sonoId').empty();
                    $('#sonoId').append($('<option>').text("--Select SONO--").val("--Select SONO--"));
                    $.each(data, function (index, item) {
                        $('#sonoId').append($('<option>').text(item.value).val(item.value));
                    });

                }
            });
        }
    }

    function dropdownChangedsono() {
        console.log("click on chnage sono function");
        var selectedOption = document.getElementById("sonoId").value;
        console.log(selectedOption);
        var selectedOption1 = 'Customer';
        // Make an AJAX request to the controller action
        console.log(selectedOption1);

        $.ajax({
            url: '/Outwards/ActionName1',
            type: 'POST',
            data: { optionValue: selectedOption, optionValue1: selectedOption1 },
            success: function (result) {
                console.log(result);
                $('#output1').empty();
                $("#output1").html(result);
                // document.getElementById("spartynameIdinput").value = result.data.suppliername;
                // document.getElementById("saddressId").value = result.data.address;
                // document.getElementById("sgstnoId").value = result.data.gstinno;
                // document.getElementById("scontactnoId").value = result.data.contactno;
                // document.getElementById("sreferencenoId").value = result.data.pono;
            },
            error: function (xhr, status, error) {
                // Handle the error response
                console.log("An error occurred while executing the action.");
            }
        });
    }

    function handleDespChange(selectElement) {
        var product = selectElement.value;

        var tid = selectElement.id;
        var product = selectElement.value;
        console.log(product);

        var txtProductCodeId = tid.replaceAll('description', 'productcode');
        var txtuomId = tid.replaceAll('description', 'uom');
        var txtbrandId = tid.replaceAll('description', 'brand');

        var txtProductCode = document.getElementById(txtProductCodeId);
        var txtuom = document.getElementById(txtuomId);
        var txtbrand = document.getElementById(txtbrandId);

        txtProductCode.value = null;
        $.ajax({
            url: '@Url.Action("ActionName_description", "inwards")',
            type: 'GET',
            dataType: 'json',
            data: { selectedvalue: product },
            success: function (data) {
                console.log(data);

                txtProductCode.value = data.modelno;
                txtuom.value = data.uom;
                txtbrand.value = data.brand;
            }
        });
    }
        // function generateSticker(event) {
        //     event.preventDefault();
        //     Swal.fire({
        //         title: "Warning",
        //         text: "Do you want to generate a sticker?",
        //         icon: "warning",
        //         showCancelButton: true,
        //         confirmButtonText: 'Yes',
        //         cancelButtonText: 'No, Save Changes',
        //         customClass: {
        //             confirmButton: 'btn btn-success',
        //             cancelButton: 'btn btn-warning'
        //         }
        //     }).then((result) => {
        //         const stickerDecisionInput = document.getElementById('stickerDecision');
        //         if (result.isConfirmed) {
        //             alert(document.getElementById('stickerDecision').value = 1);
        //             document.getElementById('stickerDecision').value = 1;
        //             document.getElementById('form4').submit(); // Submit the form with the set value
        //         } else if (result.dismiss === Swal.DismissReason.cancel) {
        //             alert(document.getElementById('stickerDecision').value = 2);
        //             document.getElementById('stickerDecision').value = 2;
        //             document.getElementById('form4').submit();
        //         }
        //     });
        // }

</script>